{"version":3,"sources":["create-user.js","createLine.js","createPermissionGroup.js","credit.js","edit-lawyer.js","editLine.js","editPermissionGroups.js","form.js","lines.js","permissionGroups.js","profile.js","settings.js","user-permissions.js","users.js","autoreplies/create.js","autoreplies/edit.js","autoreplies/home.js","blacklist/create.js","blacklist/edit.js","blacklist/home.js","charges/create.js","charges/edit.js","charges/home.js","codereaders/create.js","codereaders/edit.js","codereaders/home.js","contacts/create.js","contacts/edit.js","contacts/groups.js","contacts/home.js","contacts/trash.js","customizations/home.js","dashboard/dashboard.js","faqs/create.js","faqs/edit.js","faqs/home.js","filterings/create.js","filterings/edit.js","filterings/home.js","financial/faq.js","financial/marketing.js","financial/onlineCharge.js","financial/ourServices.js","financial/report.js","financial/submitBill.js","financial/submittedBills.js","financial/transactions.js","fluent_credit/create.js","fluent_credit/edit.js","fluent_credit/home.js","languages/create.js","languages/edit.js","languages/home.js","line_patterns/create.js","line_patterns/home.js","lines/import.js","marketingCodes/create.js","marketingCodes/home.js","modules/create.js","modules/edit.js","modules/home.js","news/create.js","news/edit.js","news/show.js","numbersBank/create.js","numbersBank/home.js","numbersBank/import.js","occupations/create.js","occupations/edit.js","occupations/home.js","plans/create.js","plans/edit.js","plans/home.js","polls/create.js","polls/edit.js","polls/home.js","polls/show.js","postalCode/create.js","postalCode/edit.js","postalCode/home.js","preTexts/create.js","preTexts/edit.js","preTexts/home.js","priceGroup/create.js","priceGroup/edit.js","priceGroup/home.js","receiveSettings/edit.js","receiveSettings/home.js","send-from-mobile/create.js","send-from-mobile/home.js","shop/checkout.js","shop/invoice.js","shop/lineExtension.js","shop/lines.js","shop/modules.js","shop/specials.js","shop/upgrade_credit.js","sms/brand.js","sms/city.js","sms/gender.js","sms/genderList.js","sms/group.js","sms/international.js","sms/map.js","sms/occupation.js","sms/postalCode.js","sms/received.js","sms/report.js","sms/single.js","sms/trash.js","socket/socketController.js","specials/create.js","specials/edit.js","specials/home.js","support/aboutUs.js","support/contactUs.js","support/faq.js","support/marketing.js","support/online.js","support/ourServices.js","support/tickets.js","transferToEmail/create.js","transferToEmail/edit.js","transferToEmail/home.js","user/lawyers.js","user/parent.js","user/report.js","user/sendSMS.js","admin/settings/home.js","contacts/groups/create.js","contacts/groups/edit.js","fluent_credit/groups/create.js","fluent_credit/groups/home.js","preTexts/group/create.js","preTexts/group/edit.js","preTexts/group/home.js","sms/default_messages/create.js","sms/default_messages/edit.js","sms/default_messages/home.js","sms/schedules/create.js","sms/schedules/edit.js","sms/schedules/home.js","support/online/list.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpzhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjhrGA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;ACAA;ACAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvEA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACljfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvfile":"tpanel-controllers.js","sourcesContent":["angular\n\t.module('inspinia')\n\t.controller('createUserController', function($rootScope, $scope, $http){\n\n\t\t$scope.createUserURL = 'users';\n\t\t$scope.createLawyerUserURL = 'users/lawyer';\n\n\t\t$http({\n\t\t\turl: 'plans',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.plans = res.data;\n\t\t})\n\n\t});","angular\n\t.module('inspinia')\n\t.controller('createLineController', function($rootScope, $scope, $http){\n\t\t$scope.createLineURL = 'lines';\n\t\n\t\t$http({\n\t\t\turl: 'api/users/agents',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.agents = res.data;\n\t\t\tsetTimeout(function(){\n\t\t\t\t$(\".chosen-select-agent\").trigger('chosen:updated');\n\t\t\t}, 200)\n\t\t});\n\n\t\t$scope.selectUsers = function(){\n\t\t\t$http({\n\t\t\t\turl: 'api/users/users?agent='+$rootScope.info.agent_id,\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.users = res.data;\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t$(\".chosen-select-user\").trigger('chosen:updated');\n\t\t\t\t}, 200)\n\t\t\t});\n\t\t}\n\n\t\t$scope.canBeRahyab = false;\n\n\t\t$scope.rahyabDetector = function(){\n\t\t\tif(!$rootScope.info.number) return;\n\t\t\t$scope.canBeRahyab = ($rootScope.info.number.match(/^50001/));\n\t\t}\n\t});","angular\n\t.module('inspinia')\n\t.controller('createPermissionGroupsController', function($rootScope, $scope, $http){\n\t\t$scope.createPermissionGroupURL = 'permissions/groups';\n\t\t$http({\n\t\t\tmethod: 'post',\n\t\t\turl: 'api/permissions/groups',\n\t\t\tdata: []\n\t\t}).then(function(res){\n\t\t\t$scope.permissions = res.data;\n\t\t});\n\t});","angular\n\t.module('inspinia')\t\n\t.controller('creditController', ['$scope', '$rootScope', '$stateParams', '$http', function($scope, $rootScope, $stateParams, $http){\n\t\t$scope.changeCreditURL = \"users/credit/\" + $stateParams.id;\n\t\t$scope.creditURL = \"api/users/credit/\" + $stateParams.id;\n\n\t\t$http({\n\t\t\turl: $scope.creditURL,\n\t\t\tmethod: 'post'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t})\n\t}]);","angular\n\t.module('inspinia')\n\t.controller('editLawyerController', function($rootScope, $scope, $http, $stateParams){\n\n\t\t$scope.editLawyerUserURL = 'users/lawyer/'+$stateParams.id;\n\n\t\t$http({\n\t\t\turl: 'users/lawyer/'+$stateParams.id+'/edit',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t});\n\n\n\t});","angular\n\t.module('inspinia')\n\t.controller('editLineController', function($rootScope, $scope, $http, $stateParams){\n\t\t$scope.editId = $stateParams.line_id;\n\t\t$http({\n\t\t\turl: 'lines/'+$scope.editId+'/edit',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t});\n\t\t$scope.editLineURL = 'lines/'+$scope.editId;\n\n\t\t$http({\n\t\t\turl: 'api/users/agents',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.agents = res.data;\n\t\t\tsetTimeout(function(){\n\t\t\t\t$(\".chosen-select-agent\").trigger('chosen:updated');\n\t\t\t}, 200)\n\t\t});\n\n\t\t$scope.selectUsers = function(){\n\t\t\t$http({\n\t\t\t\turl: 'api/users/users?agent='+$rootScope.info.agent_id,\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.users = res.data;\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t$(\".chosen-select-user\").trigger('chosen:updated');\n\t\t\t\t}, 200)\n\t\t\t});\n\t\t}\n\n\t\t$scope.canBeRahyab = false;\n\n\t\t$scope.rahyabDetector = function(){\n\t\t\tif(!$rootScope.info.number) return;\n\t\t\t$scope.canBeRahyab = ($rootScope.info.number.match(/^50001/));\n\t\t}\n\t});","angular\n\t.module('inspinia')\n\t.controller('editPermissionGroupsController', function($rootScope, $scope, $http, $stateParams){\n\t\t$scope.id = $stateParams.group_id\n\t\t$scope.editPermissionGroupURL = 'permissions/groups/' + $scope.id;\n\t\t$http({\n\t\t\tmethod: 'get',\n\t\t\turl: 'permissions/groups/' + $scope.id + '/edit',\n\t\t\tdata: []\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t});\n\n\t\t$http({\n\t\t\tmethod: 'post',\n\t\t\turl: 'api/permissions/groups',\n\t\t\tdata: []\n\t\t}).then(function(res){\n\t\t\t$scope.permissions = res.data;\n\t\t});\n\t});","angular\n\t.module('inspinia')\t\n\t.controller('ajaxFormController', [\n\t\t'$scope', \n\t\t'$rootScope',\n\t\t'$http',\n\t\t'$attrs',\n\t\t'$element', \n\t\t'initialsFactory',\n\t\t'$modal',\n\t\t'SweetAlert',\n\t\t'$filter',\n\t\tfunction($scope, $rootScope, $http, $attrs, $element, initialsFactory, $modal, SweetAlert, $filter){\n\t\t\t$scope.ajaxInProcess = false;\n\t\t\t$rootScope.info = {};\n\n\t\t\t$rootScope.submitFunctionFromOutside = this.submit = function(e){\n\t\t\t\tif(typeof e != 'undefined'){\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\t$scope.ajaxInProcess = true;\n\t\t\t\tjQuery('button[type=submit]').attr('disabled', 'disabled').addClass('disabled');\n\t\t\t\tvar method = $attrs.method;\n\t\t\t\tvar url = $attrs.action;\n\t\t\t\tvar id = $attrs.id;\n\t\t\t\tvar method_field = jQuery('#'+id).find('input[name=_method]').val();\n\t\t\t\tmethod = (method_field && method_field.length) ? method_field : method;\n\t\t\t\tif($rootScope.sendOnRootScope){\n\t\t\t\t\t$rootScope.info.sendOn = $rootScope.sendOnRootScope;\n\t\t\t\t}\n\t\t\t\t$http({\n\t\t\t\t\tmethod: method,\n\t\t\t\t\turl: url,\n\t\t\t\t\tdata: $rootScope.info\n\t\t\t\t}).then(function successCallback(response){\n\t\t\t\t\t$scope.ajaxInProcess = false;\n\t\t\t\t\tjQuery('button[type=submit]').removeAttr('disabled').removeClass('disabled');\n\t\t\t\t\tif(response.data.result == 'success'){\n\t\t\t\t\t\t// $scope.formSuccess = response.data.message;\n\t\t\t\t\t\tSweetAlert.swal({ \n\t\t\t\t\t\t\ttitle: '',\n\t\t\t\t\t\t\ttext: response.data.message,\n\t\t\t\t\t\t\ttype: 'success'\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$scope.formErrors = false;\n\t\t\t\t\t\tif(response.data.reset){\n\t\t\t\t\t\t\t$rootScope.info = {};\n\t\t\t\t\t\t\t$rootScope.info.is_confirmed = 'not';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$rootScope.sendOnRootScope = null;\n\t\t\t\t\t\t$rootScope.$broadcast('successfulRequest', response.data.message);\n\t\t\t\t\t\tif(response.data.notify){\n\t\t\t\t\t\t\tSweetAlert.swal({ \n\t\t\t\t\t\t\t\ttitle: '',\n\t\t\t\t\t\t\t\ttext: $filter('translate')('SMS_TO_GROUP_SENT')\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$scope.ajaxInProcess = false;\n\t\t\t\t\t\tjQuery('button[type=submit]').removeAttr('disabled').removeClass('disabled');\n\t\t\t\t\t\tif(response.data.result == 'exception'){\n\t\t\t\t\t\t\tSweetAlert.swal({ \n\t\t\t\t\t\t\t\ttitle: '',\n\t\t\t\t\t\t\t\ttext: [response.data.errors],\n\t\t\t\t\t\t\t\ttype: 'warning'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t// $scope.formErrors = [response.data.errors];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif(response.data.result == 'blacklist'){\n\t\t\t\t\t\t\t\t// alert(response.data.message);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif(response.data.result == 'group_confirm'){\n\t\t\t\t\t\t\t\t\tif($rootScope.info.is_confirmed && $rootScope.info.is_confirmed == 'not'){\n\t\t\t\t\t\t\t\t\t\t$rootScope.sms_confirmation_credit = response.data.totalCost;\n\t\t\t\t\t\t\t\t\t\t$rootScope.sms_confirmation_amount = response.data.numbers;\n\t\t\t\t\t\t\t\t\t\t$modal.open({\n\t\t\t\t\t                        templateUrl: 'views/common/sms_confirmation.html',\n\t\t\t\t\t                        controller: function($rootScope, $modalInstance){\n\t\t\t\t\t                        \t$rootScope.cancelConfirmation = function(){\n\t\t\t\t\t\t\t\t\t\t\t\t\t$modalInstance.dismiss('cancel');\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t$rootScope.acceptConfirmation = function(){\n\t\t\t\t\t\t\t\t\t\t\t\t\t$rootScope.info.is_confirmed = 'on';\n\t\t\t\t\t\t\t\t\t\t\t\t\t$rootScope.submitFunctionFromOutside();\n\t\t\t\t\t\t\t\t\t\t\t\t\t$modalInstance.dismiss('cancel');\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t                        }\n\t\t\t\t\t                    });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// $scope.formErrors = response.data.errors;\n\t\t\t\t\t\t\tSweetAlert.swal({ \n\t\t\t\t\t\t\t\ttitle: '',\n\t\t\t\t\t\t\t\ttext: response.data.errors,\n\t\t\t\t\t\t\t\ttype: 'warning'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$scope.formSuccess = false;\n\t\t\t\t\t}\n\t\t\t\t\t$scope.watchForProcess();\n\t\t\t\t}, function errorCallback(response){\n\t\t\t\t\tjQuery('button[type=submit]').removeAttr('disabled').removeClass('disabled');\n\t\t\t\t\t$scope.watchForProcess();\n\t\t\t\t\tif(response.message){\n\t\t\t\t\t\t// $scope.formErrors = [response.message];\n\t\t\t\t\t\tSweetAlert.swal({ \n\t\t\t\t\t\t\ttitle: '',\n\t\t\t\t\t\t\ttext: [response.message],\n\t\t\t\t\t\t\ttype: 'warning'\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(response.status == 422){\n\t\t\t\t\t\t\tvar errors_return = [];\n\t\t\t\t\t\t\tfor(var key in response.data){\n\t\t\t\t\t\t\t\tvar errors = response.data[key];\n\t\t\t\t\t\t\t\tfor(error_key in errors){\n\t\t\t\t\t\t\t\t\terrors_return.push(errors[error_key]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// $scope.formErrors = errors_return;\n\t\t\t\t\t\t\tSweetAlert.swal({ \n\t\t\t\t\t\t\t\ttitle: '',\n\t\t\t\t\t\t\t\ttext: errors_return,\n\t\t\t\t\t\t\t\ttype: 'warning'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// $scope.formErrors = [response.data];\n\t\t\t\t\t\t\tSweetAlert.swal({ \n\t\t\t\t\t\t\t\ttitle: '',\n\t\t\t\t\t\t\t\ttext: [response.data],\n\t\t\t\t\t\t\t\ttype: 'warning'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$scope.formSuccess = false;\n\t\t\t\t});\n\n\t\t\t};\n\n\t\t\tthis.withValues = function(url){\n\t\t\t\tvar initials = initialsFactory.get(url, []);\n\t\t\t\tinitials.then(function(res){\n\t\t\t\t\t$rootScope.info = res.data;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$scope.watchForProcess = function(){\n\t\t\t\t$scope.ajaxInProcess = false;\n\t\t\t}\n\t\t}\n\t]);","angular\n\t.module('inspinia')\n\t.controller('linesController', function($rootScope, $scope, $http, DTOptionsBuilder, $stateParams){\n\t\t$scope.lines = [];\n\t\t$scope.targetId = $stateParams.id;\n\t\t$scope.toUserUrl = 'lines/to-user/'+$stateParams.id;\n\t\tvar url;\n\t\tif(!$stateParams.id){\n\t\t\turl = 'lines';\n\t\t} else {\n\t\t\turl = 'lines/' + $stateParams.id;\n\t\t}\n\n\n\t\t$http({\n\t\t\tmethod: 'get',\n\t\t\turl: url\n\t\t}).then(function(res){\n\t\t\t$scope.lines = res.data;\n\t\t});\n\n\t\t$http({\n\t\t\tmethod: 'get',\n\t\t\turl: 'lines/to-user'\n\t\t}).then(function(res){\n\t\t\t$scope.linesToUser = res.data;\n\t\t});\n\n\t\t$scope.delete = function(key){\n\t\t\tvar lineId = $scope.lines[key].id;\n\t\t\t$http({\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: 'lines/'+lineId \n\t\t\t}).then(function(res){\n\t\t\t\t$scope.lines.splice(key,1);\n\t\t\t});\n\t\t}\n\n\t\t$scope.makeGeneral = function(key){\n\t\t\t$http({\n\t\t\t\turl: 'lines/toggle-general',\n\t\t\t\tmethod: 'put',\n\t\t\t\tdata: {\n\t\t\t\t\tid: $scope.lines[key].id\n\t\t\t\t}\n\t\t\t});\n\t\t\t$scope.lines[key].general = !$scope.lines[key].general;\n\t\t}\n\n\t\t$scope.toggleShoppable = function(key, id){\n\t\t\t$scope.lines[key].shoppable = !$scope.lines[key].shoppable;\n\t\t\t$http({\n\t\t\t\turl: 'lines/toggle-shoppable',\n\t\t\t\tmethod: 'put',\n\t\t\t\tdata: {\n\t\t\t\t\tid: id\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn false;\n\t\t}\n\n\t\t$scope.toggleNotifier = function(key, id){\n\t\t\tfor(line_key in $scope.lines){\n\t\t\t\t$scope.lines[line_key].notifier = 0;\n\t\t\t}\n\t\t\t$scope.lines[key].notifier = !$scope.lines[key].notifier;\n\t\t\t$http({\n\t\t\t\turl: 'lines/toggle-notifier',\n\t\t\t\tmethod: 'put',\n\t\t\t\tdata: {\n\t\t\t\t\tline_id: id\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn false;\n\t\t}\n\n\t\t$scope.toggleOwner = function(id, type){\n\t\t\t$http({\n\t\t\t\turl: 'lines/toggle-owner/'+type,\n\t\t\t\tmethod: 'put',\n\t\t\t\tdata: {\n\t\t\t\t\tline_id: id\n\t\t\t\t}\n\t\t\t}).then(function(){\n\t\t\t\t$http({\n\t\t\t\t\tmethod: 'get',\n\t\t\t\t\turl: url\n\t\t\t\t}).then(function(res){\n\t\t\t\t\t$scope.lines = res.data;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t        .withDOM('<\"html5buttons\"B>lTfgitp')\n\t        .withButtons([\n\t            {extend: 'copy'},\n\t            {extend: 'csv'},\n\t            {extend: 'excel', title: 'ExampleFile'},\n\t            \n\n\t            {extend: 'print',\n\t                customize: function (win){\n\t                    $(win.document.body).addClass('white-bg');\n\t                    $(win.document.body).css('font-size', '10px');\n\n\t                    $(win.document.body).find('table')\n\t                        .addClass('compact')\n\t                        .css('font-size', 'inherit');\n\t                }\n\t            }\n\t        ]);\n\t});","angular\n\t.module('inspinia')\n\t.controller('permissionGroupsController', function($rootScope, $scope, $http, DTOptionsBuilder, SweetAlert, $filter){\n\t\t$http({\n\t\t\tmethod: 'get',\n\t\t\turl: 'permissions/groups',\n\t\t\tdata: []\n\t\t}).then(function(res){\n\t\t\t$scope.groups = res.data;\n\t\t});\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t        .withDOM('<\"html5buttons\"B>lTfgitp')\n\t        .withButtons([\n\t            {extend: 'copy'},\n\t            {extend: 'csv'},\n\t            {extend: 'excel', title: 'ExampleFile'},\n\t            \n\n\t            {extend: 'print',\n\t                customize: function (win){\n\t                    $(win.document.body).addClass('white-bg');\n\t                    $(win.document.body).css('font-size', '10px');\n\n\t                    $(win.document.body).find('table')\n\t                        .addClass('compact')\n\t                        .css('font-size', 'inherit');\n\t                }\n\t            }\n\t        ]);\n\n\t    $scope.delete = function(id, key){\n\t    \tSweetAlert.swal({\n\t\t\t\ttitle: $filter('translate')(\"ARE_YOU_SURE?\"),\n\t\t\t\ttype: \"warning\",\n    \t\t\tshowCancelButton: true,\n    \t\t\tcloseOnConfirm: true,\n    \t\t\tcloseOnCancel: true,\n    \t\t\tconfirmButtonText: $filter('translate')('YES_DELETE_IT'),\n    \t\t\tcancelButtonText: $filter('translate')('NO'),\n\t\t\t}, function(isConfirm){\n\t\t\t\tif(isConfirm){\n\t\t\t    \t$http({\n\t\t\t\t\t\tmethod: 'delete',\n\t\t\t\t\t\turl: 'permissions/groups/' + id,\n\t\t\t\t\t\tdata: []\n\t\t\t\t\t}).then(function(res){\n\t\t\t\t\t\t$scope.groups.splice(key, 1);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t    }\n\t});","angular\n\t.module('inspinia')\t\n\t.controller('profileController', ['$scope', '$rootScope', '$http', '$stateParams', function($scope, $rootScope, $http, $stateParams){\n\t\t$scope.canChangePassword = true;\n\t\t$rootScope.$watch('user', function(user){\n\t\t\tif(user.id){\n\t\t\t\t$scope.changePasswordURL = \"users/profile/\" + user.id + \"/password\";\n\t\t\t\t$scope.changeBirthdayURL = \"users/profile/\" + user.id + \"/birth\";\n\t\t\t\t$scope.changeInfoURL = 'users/profile';\n\t\t\t\tif(!$stateParams.id){\n\t\t\t\t\t$rootScope.info = user;\n\t\t\t\t} else {\n\t\t\t\t\t$scope.changeBirthdayURL = \"users/profile/\" + $stateParams.id + \"/birth\";\n\t\t\t\t\t$http({\n\t\t\t\t\t\turl: 'users/'+$stateParams.id,\n\t\t\t\t\t\tmethod: 'get'\n\t\t\t\t\t}).then(function(res){\n\t\t\t\t\t\t$rootScope.info = res.data;\n\t\t\t\t\t});\n\t\t\t\t\t$scope.canChangePassword = false;\n\t\t\t\t\t$scope.changeInfoURL = 'users/profile/'+$stateParams.id;\n\t\t\t\t}\n\t\t\t}\n\t\t}, true);\n\n\t}]);","angular\n\t.module('inspinia')\n\t.controller('settingsController', function($rootScope, $scope, $rootScope, $http){\n\t\t$rootScope.$watch('user', function(userId){\n\t\t\t$scope.changeSettingsURL = \"users/setting/\"+$rootScope.user.id;\n\t\t});\n\n\t\t$rootScope.info = [];\n\n\t\t$http({\n\t\t\turl: 'api/users/settings',\n\t\t\tmethod: 'post'\n\t\t}).then(function(res){\n\t\t\t$scope.userSettings = res.data;\n\t\t\tfor(var key in res.data){\n\t\t\t\t$rootScope.info[key] = res.data[key];\n\t\t\t}\n\t\t});\n\n\t\t$http({\n\t\t\turl: 'api/info',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.apiKey = res.data;\n\t\t});\n\n\t});","angular.module('inspinia')\n\t.controller('userPermissionsController', function($rootScope, $scope, $http, $stateParams){\n\t\t$scope.userPermissionsURL = 'permissions/user/' + $stateParams.user_id;\n\t\t$scope.userPriceGroupURL = 'price-group/user/' + $stateParams.user_id;\n\t\t$http({\n\t\t\tmethod: 'get',\n\t\t\turl: 'permissions/user/' + $stateParams.user_id + '/edit',\n\t\t\tdata: []\n\t\t}).then(function(res){\n\t\t\t$rootScope.info.permissions = res.data.permissions;\n\t\t\t$scope.username = res.data.username;\n\t\t});  \n\n\t\t$http({\n\t\t\tmethod: 'post',\n\t\t\turl: 'api/permissions/groups',\n\t\t\tdata: []\n\t\t}).then(function(res){\n\t\t\t$scope.permissions = res.data;\n\t\t});\n\n\t\t$http({\n\t\t\tmethod: 'get',\n\t\t\turl: 'permissions/groups',\n\t\t}).then(function(res){\n\t\t\t$scope.permissionGroups = res.data;\n\t\t});\n\n\t\t$http({\n\t\t\turl: 'fluent-credits/groups',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.priceGroups = res.data;\n\t\t});\n\n\t\t$http({\n\t\t\turl: 'price-group/'+$stateParams.user_id,\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.userPriceGroups = res.data;\n\t\t});\n\n\t\t$scope.permissionGroupChanged = function(){\n\t\t\tvar permissions = JSON.parse($scope.selectedPermissionGroup);\n\t\t\tfor(var key in permissions){\n\t\t\t\tif(permissions[key] != 0 && permissions[key] != 1) continue;\n\t\t\t\t$rootScope.info.permissions[key] = permissions[key];\n\t\t\t}\n\t\t}\n\n\t\t$scope.customCreditFluent = []\n\n\t\t$http({\n\t\t\turl: 'fluent-credits/'+$stateParams.user_id,\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.fluentCredits = res.data;\n\t\t\tif(res.data.custom){\n\t\t\t\t$scope.customCreditFluent = res.data.custom;\n\t\t\t\t$rootScope.info.customCreditFluent = res.data.custom;\n\t\t\t}\n\t\t});\n\n\t\t$scope.removeFluentCustom = function(key){\n\t\t\t$scope.customCreditFluent.splice(key, 1);\n\t\t}\n\n\t\t$scope.addNewCustomCredit = function(key){\n\t\t\t$scope.customCreditFluent.push({\n\t\t\t\tceil: '',\n\t\t\t\tfee: ''\n\t\t\t});\n\t\t}\n\n\t\t$scope.submitFluentCredit = function(){\n\t\t\t$rootScope.info.customCreditFluent = $scope.customCreditFluent;\n\t\t}\n\t});","angular\n\t.module('inspinia')\n\t.controller('usersController', function($rootScope, $scope, $http, DTOptionsBuilder, $modal, SweetAlert, $filter){\n\n\t\t$scope.selectedRows = [];\n\t\t$scope.selectedNumbers = [];\n\n\t\t$http({\n\t\t\tmethod: 'get',\n\t\t\turl: 'users',\n\t\t\tdata: []\n\t\t}).then(function(res){\n\t\t\t$scope.users = res.data;\n\t\t});\n\n\t\t$scope.enable = function(key, id){\n\t\t\tSweetAlert.swal({\n                title: $filter('translate')('ARE_YOU_SURE'),\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#DD6B55\",\n                confirmButtonText: $filter('translate')('YES'),\n                cancelButtonText: $filter('translate')('NO')},\n            function (isConfirm) {\n                if (isConfirm) {\n\t\t\t\t\t$scope.users[key].status = 0;\n\t\t\t\t\t$http({\n\t\t\t\t\t\turl: 'users/toggle-status/'+id,\n\t\t\t\t\t\tmethod: 'put'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$scope.disable = function(key, id){\n\t\t\tSweetAlert.swal({\n                title: $filter('translate')('ARE_YOU_SURE'),\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#DD6B55\",\n                confirmButtonText: $filter('translate')('YES'),\n                cancelButtonText: $filter('translate')('NO')},\n            function (isConfirm) {\n                if (isConfirm) {\n\t\t\t\t\t$scope.users[key].status = -1;\n\t\t\t\t\t$http({\n\t\t\t\t\t\turl: 'users/toggle-status/'+id,\n\t\t\t\t\t\tmethod: 'put'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$scope.makeAgent = function(key, id){\n\t\t\tSweetAlert.swal({\n                title: $filter('translate')('ARE_YOU_SURE'),\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#DD6B55\",\n                confirmButtonText: $filter('translate')('YES'),\n                cancelButtonText: $filter('translate')('NO')},\n            function (isConfirm) {\n                if (isConfirm) {\n                    $scope.users[key].role = 1;\n\t\t\t\t\t$http({\n\t\t\t\t\t\turl: 'users/toggle-role/'+id,\n\t\t\t\t\t\tmethod: 'put'\n\t\t\t\t\t});\n                }\n            });\n\t\t}\n\n\t\t$scope.makeUser = function(key, id){\n\t\t\tSweetAlert.swal({\n                title: $filter('translate')('ARE_YOU_SURE'),\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#DD6B55\",\n                confirmButtonText: $filter('translate')('YES'),\n                cancelButtonText: $filter('translate')('NO')},\n            function (isConfirm) {\n                if (isConfirm) {\n\t\t\t\t\t$scope.users[key].role = 0;\n\t\t\t\t\t$http({\n\t\t\t\t\t\turl: 'users/toggle-role/'+id,\n\t\t\t\t\t\tmethod: 'put'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$scope.trash = function(key, id){\n\t\t\tSweetAlert.swal({\n                title: $filter('translate')('ARE_YOU_SURE'),\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#DD6B55\",\n                confirmButtonText: $filter('translate')('YES'),\n                cancelButtonText: $filter('translate')('NO')},\n            function (isConfirm) {\n                if (isConfirm) {\n\t\t\t\t\t$scope.users.splice(key, 1);\n\t\t\t\t\t$http({\n\t\t\t\t\t\turl: 'users/'+id,\n\t\t\t\t\t\tmethod: 'delete'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$scope.sendMessage = function(key, number){\n\t\t\t$rootScope.sendMessageToMobile = number;\n\t\t\t$modal.open({\n                templateUrl: 'views/common/sms_to_user.html',\n            });\n\t\t}\n\n\t\t$scope.selectRow = function(key, id, number){\n\t    \tif($scope.selectedRows.indexOf(key) !== -1){\n\t    \t\tdelete($scope.selectedRows[$scope.selectedRows.indexOf(key)]);\n\t    \t\tdelete($scope.selectedNumbers[$scope.selectedNumbers.indexOf(number)]);\n\t    \t\treturn;\n\t    \t}\n\t    \t$scope.selectedRows[id] = key;\n\t    \t$scope.selectedNumbers.push(number);\n\t    }\n\n\t    $scope.removeSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.trash($scope.selectedRows[selected], selected, true);\n\t    \t}\n\t    \tsetTimeout(function(){\n\t    \t\t$scope.selectedRows = [];\n\t\t    \t$http({\n\t\t\t\t\turl: 'users',\n\t\t\t\t\tmethod: 'get'\n\t\t\t\t}).then(function(res){\n\t\t\t\t\t$scope.users = res.data;\n\t\t\t\t});\n\t    \t}, 500);\n\t    }\n\n\t    $scope.sendGroup = function(){\n\t    \t$rootScope.sendMessageToMobile = $scope.selectedNumbers.join();\n\t\t\t$modal.open({\n                templateUrl: 'views/common/sms_to_user_group.html',\n            });\n\t    }\n\n\t\tjQuery('body').on('click', '#selectAllRows', function(){\n    \t\tjQuery('input[type=checkbox].selectRow').trigger('click');\n    \t});\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t        .withDOM('<\"html5buttons\"B>lTfgitp')\n\t        .withButtons([\n\t            {extend: 'copy'},\n\t            {extend: 'csv'},\n\t            {extend: 'excel', title: 'ExampleFile'},\n\t            \n\n\t            {extend: 'print',\n\t                customize: function (win){\n\t                    $(win.document.body).addClass('white-bg');\n\t                    $(win.document.body).css('font-size', '10px');\n\n\t                    $(win.document.body).find('table')\n\t                        .addClass('compact')\n\t                        .css('font-size', 'inherit');\n\t                }\n\t            }\n\t        ]);\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createAutoreplyController', function($rootScope, $scope, $http){\n\t\t\n\t\t$scope.createAutoreplyURL = 'autoreplies';\n\n\t\t$http({\n\t\t\turl: 'lines',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.lines = res.data;\n\t\t});\n\n\t\t$http({\n\t\t\turl: 'contacts/groups',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.groups = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editAutoreplyController', function($rootScope, $scope, $http, $stateParams){\n\t\t\n\t\t$scope.id = $stateParams.id;\n\n\t\t$scope.editAutoreplyURL = 'autoreplies/'+$scope.id;\n\n\t\t$http({\n\t\t\turl: 'lines',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.lines = res.data;\n\t\t});\n\n\t\t$http({\n\t\t\turl: 'autoreplies/'+$scope.id+'/edit',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('autorepliesController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\t\t\n\t\t$scope.selectedRows = [];\n\t\t\n\t\t$http({\n\t\t\turl: 'autoreplies',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.autoreplies = res.data;\n\t\t});\n\n\t\t$scope.delete = function(key, index){\n\t\t\t$http({\n\t\t\t\turl: 'autoreplies/'+index,\n\t\t\t\tmethod: 'delete'\n\t\t\t});\n\t\t\t$scope.autoreplies[key].status = -1;\n\t\t};\n\n\t\t$scope.activate = function(key, index){\n\t\t\t$http({\n\t\t\t\turl: 'autoreplies/enable/'+index,\n\t\t\t\tmethod: 'put'\n\t\t\t});\n\t\t\t$scope.autoreplies[key].status = 0;\n\t\t};\n\n\t\t$scope.trash = function(key, index){\n\t\t\t$http({\n\t\t\t\turl: 'autoreplies/trash/'+index,\n\t\t\t\tmethod: 'delete'\n\t\t\t});\n\t\t\t$scope.autoreplies.splice(key, 1);\n\t\t}\n\n\t\t$scope.selectRow = function(key, id){\n\t    \tif($scope.selectedRows.indexOf(key) !== -1){\n\t    \t\tdelete($scope.selectedRows[$scope.selectedRows.indexOf(key)]);\n\t    \t\treturn;\n\t    \t}\n\t    \t$scope.selectedRows[id] = key;\n\t    }\n\n\t    $scope.removeSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.delete($scope.selectedRows[selected], selected, true);\n\t    \t}\n\t    \tsetTimeout(function(){\n\t    \t\t$scope.selectedRows = [];\n\t\t    \t$http({\n\t\t\t\t\turl: 'autoreplies',\n\t\t\t\t\tmethod: 'get'\n\t\t\t\t}).then(function(res){\n\t\t\t\t\t$scope.autoreplies = res.data;\n\t\t\t\t});\n\t    \t}, 500);\n\t    }\n\n\t\tjQuery('body').on('click', '#selectAllRows', function(){\n    \t\tjQuery('input[type=checkbox].selectRow').trigger('click');\n    \t});\n\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createBlacklistController', function($rootScope, $scope){\n\t\t\n\t\t$scope.createBlacklistURL = 'blacklist';\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editBlacklistController', function($rootScope, $scope, $http, $stateParams){\n\t\t\n\t\t$scope.id = $stateParams.id;\n\n\t\t$scope.editBlacklistURL = 'blacklist/'+$scope.id;\n\n\t\t$http({\n\t\t\turl: 'blacklist/'+$scope.id+'/edit',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t});\n\n\t\t$scope.createBlacklistURL = 'blacklist';\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('blacklistController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\t\t\n\t\t$scope.selectedRows = [];\n\t\t\n\t\t$scope.getBlacklist = function()\n\t\t{\n\t\t\t$http({\n\t\t\t\turl: 'blacklist',\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.blacklists = res.data;\n\t\t\t\t$scope.selectedRows = [];\n\t\t\t});\n\t\t}\n\t\t$scope.getBlacklist();\n\n\t\t$scope.delete = function(key, index){\n\t\t\t$http({\n\t\t\t\turl: 'blacklist/'+index,\n\t\t\t\tmethod: 'delete'\n\t\t\t});\n\t\t\t$scope.blacklists.splice(key, 1);\n\t\t}\n\n\t\t$scope.selectRow = function(key, id){\n\t    \tif($scope.selectedRows.indexOf(key) !== -1){\n\t    \t\tdelete($scope.selectedRows[$scope.selectedRows.indexOf(key)]);\n\t    \t\treturn;\n\t    \t}\n\t    \t$scope.selectedRows[id] = key;\n\t    }\n\n\t    $scope.removeSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.delete($scope.selectedRows[selected], selected, true);\n\t    \t}\n\t    \t$scope.getBlacklist();\n\t    }\n\n\t\tjQuery('body').on('click', '#selectAllRows', function(){\n    \t\tjQuery('input[type=checkbox].selectRow').trigger('click');\n    \t});\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createChargesController', function($rootScope, $scope){\n\t\t\n\t\t$scope.createChargesURL = 'charges';\n\n\t\t$scope.random = Math.random().toString(36).substring(13, 5);\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editChargesController', function($rootScope, $scope, $http, $stateParams){\n\n\t\t$scope.id = $stateParams.id;\n\t\t\n\t\t$scope.editChargesURL = 'charges/'+$scope.id;\n\n\t\t$http({\n\t\t\turl: 'charges/'+$scope.id+'/edit',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('chargesController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\t\t\n\t\t$http({\n\t\t\turl: 'charges',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.charges = res.data;\n\t\t});\n\n\t\t$scope.delete = function(key, index){\n\t\t\t$http({\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: 'charges/'+index\n\t\t\t});\n\t\t\t$scope.charges.splice(key, 1);\n\t\t};\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createCodereaderController', function($rootScope, $scope, $http){\n\t\t\n\t\t$scope.createCodereaderURL = 'codereaders';\n\n\t\t$scope.conditions = [{condition: '', reaction: ''}];\n\n\t\t$scope.addRow = function($event){\n\t\t\t$event.preventDefault();\n\t\t\t$scope.conditions.push({condition: '', reaction: ''});\n\t\t}\n\n\t\t$http({\n\t\t\turl: 'lines',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.lines = res.data;\n\t\t});\n\n\t\t$http({\n\t\t\turl: 'contacts/groups',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.groups = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editCodereaderController', function($rootScope, $scope, $http, $stateParams){\n\t\t\n\t\t$scope.id = $stateParams.id;\n\n\t\t$scope.editCodereaderURL = 'codereaders/'+$scope.id;\n\n\t\t$scope.conditions = [{condition: '', reaction: ''}];\n\n\t\t$http({\n\t\t\turl: 'lines',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.lines = res.data;\n\t\t});\n\n\n\t\t$http({\n\t\t\turl: 'codereaders/'+$scope.id+'/edit',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t\t$scope.conditions = res.data.conditions;\n\t\t});\n\n\t\t$scope.addRow = function($event){\n\t\t\t$event.preventDefault();\n\t\t\t$scope.conditions.push({condition: '', reaction: ''});\n\t\t}\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('codereaderController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\t\t\n\t\t$scope.selectedRows = [];\n\t\t\n\t\t$http({\n\t\t\turl: 'codereaders',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.codereaders = res.data;\n\t\t});\n\n\t\t$scope.delete = function(key, index){\n\t\t\t$http({\n\t\t\t\turl: 'codereaders/'+index,\n\t\t\t\tmethod: 'delete'\n\t\t\t});\n\t\t\t$scope.codereaders[key].status = -1;\n\t\t};\n\n\t\t$scope.activate = function(key, index){\n\t\t\t$http({\n\t\t\t\turl: 'codereaders/enable/'+index,\n\t\t\t\tmethod: 'put'\n\t\t\t});\n\t\t\t$scope.codereaders[key].status = 0;\n\t\t};\n\n\t\t$scope.trash = function(key, index){\n\t\t\t$http({\n\t\t\t\turl: 'codereaders/trash/'+index,\n\t\t\t\tmethod: 'delete'\n\t\t\t});\n\t\t\t$scope.codereaders.splice(key, 1);\n\t\t}\n\n\t\t$scope.selectRow = function(key, id){\n\t    \tif($scope.selectedRows.indexOf(key) !== -1){\n\t    \t\tdelete($scope.selectedRows[$scope.selectedRows.indexOf(key)]);\n\t    \t\treturn;\n\t    \t}\n\t    \t$scope.selectedRows[id] = key;\n\t    }\n\n\t    $scope.removeSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.delete($scope.selectedRows[selected], selected, true);\n\t    \t}\n\t    \tsetTimeout(function(){\n\t    \t\t$scope.selectedRows = [];\n\t\t    \t$http({\n\t\t\t\t\turl: 'codereaders',\n\t\t\t\t\tmethod: 'get'\n\t\t\t\t}).then(function(res){\n\t\t\t\t\t$scope.codereaders = res.data;\n\t\t\t\t});\n\t    \t}, 500);\n\t    }\n\n\t    jQuery('body').on('click', '#selectAllRows', function(){\n    \t\tjQuery('input[type=checkbox].selectRow').trigger('click');\n    \t});\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createContactController', function($rootScope, $scope, $http, $modal, SweetAlert, $filter){\n\t\t\n\t\t$scope.createContactURL = 'contacts/contact';\n\t\t$scope.contacts = [{name: '', number: ''}];\n\n\t\t$http({\n\t\t\turl: 'contacts/groups',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.groups = res.data;\n\t\t});\n\n\t\t$scope.importContacts = function($event){\n\t\t\t$event.preventDefault();\n\t\t\t$modal.open({\n                templateUrl: 'views/contacts/import_contacts.html',\n            });\n\t\t}\n\n\t\t$rootScope.$on('fileUploaded', function(){\n\t\t\tSweetAlert.swal({\n\t            title: $filter('translate')('CONTACTS_IMPORTED'),\n\t        });\n\t        location.reload();\n\t\t});\n\n\t\t$scope.addNewContactRow = function($event){\n\t\t\t$event.preventDefault();\n\t\t\t$scope.contacts.push({name: '', number: ''});\n\t\t}\n\n\t\t$scope.removeContactRow = function($event, key){\n\t\t\t$event.preventDefault();\n\t\t\t$scope.contacts.splice(key, 1);\n\t\t}\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editContactController', function($rootScope, $scope, $http, $stateParams){\n\t\t\n\t\t$scope.id = $stateParams.id;\n\n\t\t$scope.editContactURL = 'contacts/contact/'+$scope.id;\n\n\t\t$http({\n\t\t\turl: 'contacts/contact/'+$scope.id+'/edit',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t});\n\n\t\t$http({\n\t\t\turl: 'contacts/groups',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.groups = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('contactGroupController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\n\t\t$scope.selectedRows = [];\n\n\t\t$scope.getGroups = function()\n\t\t{\n\t\t\t$http({\n\t\t\t\turl: 'contacts/groups',\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.groups = res.data;\n\t\t\t\t$scope.selectedRows = [];\n\t\t\t});\n\t\t}\n\t\t$scope.getGroups();\n\n\t\t$scope.delete = function(key, id){\n\t    \t$http({\n\t    \t\tmethod: 'delete',\n\t    \t\turl: 'contacts/groups/'+id,\n\t    \t});\n\t    \t$scope.groups.splice(key, 1);\n\t    }\n\n\t    $scope.selectRow = function(key, id){\n\t    \tif($scope.selectedRows.indexOf(key) !== -1){\n\t    \t\tdelete($scope.selectedRows[$scope.selectedRows.indexOf(key)]);\n\t    \t\treturn;\n\t    \t}\n\t    \t$scope.selectedRows[id] = key;\n\t    }\n\n\t    $scope.removeSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.delete($scope.selectedRows[selected], selected);\n\t    \t}\n\t    \t$scope.getGroups();\n\t    }\n\n\t    jQuery('body').on('click', '#selectAllRows', function(){\n    \t\tjQuery('input[type=checkbox].selectRow').trigger('click');\n    \t});\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t\t\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('ContactController', function($rootScope, $scope, $http, $modal, DTOptionsBuilder, charactersFactory){\n\n\t\t$rootScope.contactNumber = '';\n\t\t$scope.messageCharacters = 0;\n\n\t\t$scope.calculateCharacters = function(text){\n\t\t\t$scope.messageCharacters = (typeof text != 'undefined') ? text.length : 0;\n\t\t\t$scope.messagePages = charactersFactory.calculate($rootScope.lineIdNumbers[$rootScope.info.line], $rootScope.info.text);\n\t\t}\n\n\t\t$rootScope.sendSingleSMSURL = 'sms/send/to';\n\t\t$rootScope.sendGroupSMSURL =  'sms/send/to/group';\n\t\t$scope.selectedRows = [];\n\t\t\n\t\t$scope.getContacts = function()\n\t\t{\n\t\t\t$http({\n\t\t\t\turl: 'contacts/contact',\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.contacts = res.data;\n\t\t\t\t$scope.selectedRows = [];\n\t\t\t});\n\t\t}\n\n\t\t$scope.getContacts();\n\n\t\t$scope.delete = function(key, index, multi){\n\t\t\t$http({\n\t\t\t\t'method': 'delete',\n\t\t\t\t'url': 'contacts/contact/'+index\n\t\t\t});\n\t\t}\n\n\t\t$scope.sendMessage = function(key, contact){\n\t\t\t$modal.open({\n                templateUrl: 'views/contacts/sendMessage.html',\n            });\n            $rootScope.contactNumber = contact.number;\n\t\t}\n\n\t\t$scope.selectRow = function(key, id){\n\t    \tif($scope.selectedRows.indexOf(key) !== -1){\n\t    \t\tdelete($scope.selectedRows[$scope.selectedRows.indexOf(key)]);\n\t    \t\treturn;\n\t    \t}\n\t    \t$scope.selectedRows[id] = key;\n\t    }\n\n\t    $scope.removeSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.delete($scope.selectedRows[selected], selected);\n\t    \t}\n\t    \t$scope.getContacts();\n\t    }\n\n\t    $scope.resendSelected = function(){\n\t    \tvar numbers = '';\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\tnumbers += selected + ',';\n\t    \t}\n\t    \t$rootScope.contactsNumbers = numbers;\n\t    \t$scope.selectedRows = [];\n\t    \t$modal.open({\n                templateUrl: 'views/contacts/sendMessageGroup.html',\n            });\n\t    }\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n        .withDOM('<\"html5buttons\"B>lTfgitp')\n        .withButtons([\n            {extend: 'copy'},\n            {extend: 'csv'},\n            {extend: 'excel', title: 'ExampleFile'},\n            \n\n            {extend: 'print',\n                customize: function (win){\n                    $(win.document.body).addClass('white-bg');\n                    $(win.document.body).css('font-size', '10px');\n\n                    $(win.document.body).find('table')\n                        .addClass('compact')\n                        .css('font-size', 'inherit');\n                }\n            }\n        ]);\n\n        \tjQuery('body').on('click', '#selectAllRows', function(){\n        \t\tjQuery('input[type=checkbox].selectRow').trigger('click');\n        \t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('trashContactController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\t\t\n\t\t$scope.selectedRows = [];\n\n\t\t$scope.getContacts = function()\n\t\t{\n\t\t\t$http({\n\t\t\t\tmethod: 'get',\n\t\t\t\turl: 'contacts/trash'\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.contacts = res.data;\n\t\t\t\t$scope.selectedRows = [];\n\t\t\t});\n\t\t}\t\n\t\t$scope.getContacts();\n\n\t\t$scope.restore = function(key, index){\n\t\t\t$http({\n\t\t\t\turl: 'contacts/trash/restore/'+index,\n\t\t\t\tmethod: 'post'\n\t\t\t});\n\t\t\t$scope.contacts.splice(key, 1);\n\t\t}\n\n\t\t$scope.explode = function(key, index){\n\t\t\t$http({\n\t\t\t\turl: 'contacts/trash/explode/'+index,\n\t\t\t\tmethod: 'post'\n\t\t\t});\n\t\t\t$scope.contacts.splice(key, 1);\n\t\t}\n\n\n\t\t$scope.selectRow = function(key, id){\n\t    \tif($scope.selectedRows.indexOf(key) !== -1){\n\t    \t\tdelete($scope.selectedRows[$scope.selectedRows.indexOf(key)]);\n\t    \t\treturn;\n\t    \t}\n\t    \t$scope.selectedRows[id] = key;\n\t    }\n\n\t    $scope.removeSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.explode($scope.selectedRows[selected], selected);\n\t    \t}\n\t    \t$scope.getContacts();\n\t    }\n\n\t    jQuery('body').on('click', '#selectAllRows', function(){\n    \t\tjQuery('input[type=checkbox].selectRow').trigger('click');\n    \t});\n\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('customizationController', function($rootScope, $scope, $http){\n\t\t\n\t\t$rootScope.$watch('user.id', function(res){\t\n\t\t\tif(typeof res == 'undefined') return;\n\t\t\t$scope.customizationURL = 'customization/'+$rootScope.user.id;\n\n\t\t\t$http({\n\t\t\t\turl: 'customization/' + $rootScope.user.id + '/edit',\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$rootScope.info = res.data;\n\t\t\t});\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('dashboardController', function($rootScope, $scope, $http){\n\n\t\t$rootScope.info = [];\n\t\t\n\t\t$http({\n\t\t\turl: 'dashboard',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t\t$scope.generateChart();\n\t\t});\n\n\t\t$http({\n\t\t\turl: 'news',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.dashboardNews = res.data;\n\t\t});\n\n\t\t$http({\n\t\t\turl: 'support/tickets/dashboard',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.dashboardTickets = res.data;\n\t\t});\n\n\t\t$scope.generateChart = function(){\n\t\t    var dataset = [\n\t\t        {\n\t\t            label: \"Number of messages\",\n\t\t            grow:{stepMode:\"linear\"},\n\t\t            data: $rootScope.info.messages_chart,\n\t\t            color: \"#1ab394\",\n\t\t            bars: {\n\t\t                show: true,\n\t\t                align: \"center\",\n\t\t                barWidth: 24 * 60 * 60 * 600,\n\t\t                lineWidth: 0\n\t\t            }\n\n\t\t        },\n\t\t    ];\n\n\t\t    var options = {\n\t\t        grid: {\n\t\t            hoverable: true,\n\t\t            clickable: true,\n\t\t            tickColor: \"#d5d5d5\",\n\t\t            borderWidth: 0,\n\t\t            color: '#d5d5d5'\n\t\t        },\n\t\t        colors: [\"#1ab394\", \"#464f88\"],\n\t\t        tooltip: true,\n\t\t        xaxis: {\n\t\t            mode: \"time\",\n\t\t            tickSize: [3, \"day\"],\n\t\t            tickLength: 0,\n\t\t            axisLabel: \"Date\",\n\t\t            axisLabelUseCanvas: true,\n\t\t            axisLabelFontSizePixels: 12,\n\t\t            axisLabelFontFamily: 'Arial',\n\t\t            axisLabelPadding: 10,\n\t\t            color: \"#d5d5d5\"\n\t\t        },\n\t\t        yaxes: [\n\t\t            {\n\t\t                position: \"left\",\n\t\t                max: $rootScope.info.messages_chart_max_val,\n\t\t                color: \"#d5d5d5\",\n\t\t                axisLabelUseCanvas: true,\n\t\t                axisLabelFontSizePixels: 12,\n\t\t                axisLabelFontFamily: 'Arial',\n\t\t                axisLabelPadding: 3\n\t\t            },\n\t\t            {\n\t\t                position: \"right\",\n\t\t                color: \"#d5d5d5\",\n\t\t                axisLabelUseCanvas: true,\n\t\t                axisLabelFontSizePixels: 12,\n\t\t                axisLabelFontFamily: ' Arial',\n\t\t                axisLabelPadding: 67\n\t\t            }\n\t\t        ],\n\t\t        legend: {\n\t\t            noColumns: 1,\n\t\t            labelBoxBorderColor: \"#d5d5d5\",\n\t\t            position: \"nw\"\n\t\t        }\n\n\t\t    };\n\n\t\t    /**\n\t\t     * Definition of variables\n\t\t     * Flot chart\n\t\t     */\n\t\t    $scope.flotData = dataset;\n\t\t    $scope.flotOptions = options;\n\t\t}\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createFAQSController', function($rootScope, $scope){\n\t\t\n\t\t$scope.createFAQSURL = 'faqs';\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editFAQSController', function($rootScope, $scope, $http, $stateParams){\n\n\t\t$scope.id = $stateParams.id;\n\t\t\n\t\t$scope.editFAQSURL = 'faqs/'+$scope.id;\n\n\t\t$http({\n\t\t\turl: 'faqs/'+$scope.id+'/edit',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('faqsController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\t\t\n\t\t$http({\n\t\t\turl: 'faqs',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.faqs = res.data;\n\t\t});\n\n\t\t$scope.delete = function(key, index){\n\t\t\t$http({\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: 'faqs/'+index\n\t\t\t});\n\t\t\t$scope.faqs.splice(key, 1);\n\t\t};\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createFilteringsController', function($rootScope, $scope){\n\t\t\n\t\t$scope.createFilteringsURL = 'filterings';\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editFilteringsController', function($rootScope, $scope, $http, $stateParams){\n\n\t\t$scope.id = $stateParams.id;\n\t\t\n\t\t$scope.editFilteringsURL = 'filterings/'+$scope.id;\n\n\t\t$http({\n\t\t\turl: 'filterings/'+$scope.id+'/edit',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('filteringsController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\t\t\n\t\t$http({\n\t\t\turl: 'filterings',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.filterings = res.data;\n\t\t});\n\n\t\t$scope.delete = function(key, index){\n\t\t\t$http({\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: 'filterings/'+index\n\t\t\t});\n\t\t\t$scope.filterings.splice(key, 1);\n\t\t};\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t});\t","","","","angular\n\t.module('inspinia')\n\t.controller('ourServicesController', function($rootScope, $scope, $http){\n\n\t\t$scope.ourServices = '';\n\n\t\t$http({\n\t\t\turl: 'customization/our-services',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.ourServices = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('financialReportController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\t\t\n\t\t$scope.transactions = [];\n\n\t\t$http({\n\t\t\turl: 'financial/report',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.transactions = res.data;\n\t\t});\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\n\t});\t","","angular\n\t.module('inspinia')\n\t.controller('submittedBillsController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\n\t\t$http({\n\t\t\turl: '/financial/bill/report',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.bills = res.data;\n\t\t});\n\t\t\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('transactionsController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\t\t\t\n\t\t$scope.transactions = [];\n\n\t\t$http({\n\t\t\turl: 'financial/transactions',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.transactions = res.data;\n\t\t});\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createFluentCreditController', function($rootScope, $scope, $http){\n\t\t\n\t\t$scope.createFluentCreditURL = 'fluent-credits';\n\n\t\t$http({\n\t\t\turl: 'fluent-credits/groups',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.groups = res.data;\n\t\t})\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editFluentCreditController', function($rootScope, $scope, $http, $stateParams){\n\n\t\t$scope.id = $stateParams.id;\n\t\t\n\t\t$scope.editFluentCreditURL = 'fluent-credits/'+$scope.id;\n\n\t\t$http({\n\t\t\turl: 'fluent-credits/'+$scope.id+'/edit',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data\n\t\t});\n\n\t\t$http({\n\t\t\turl: 'fluent-credits/groups',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.groups = res.data;\n\t\t})\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('fluentCreditController', function($scope, $http, DTOptionsBuilder){\n\n\t\t$scope.fluentCredits = [];\n\t\t\n\t\t$http({\n\t\t\turl: 'fluent-credits',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.fluentCredits = res.data;\n\t\t});\n\n\t\t$scope.delete = function(key, index){\n\t\t\t$scope.fluentCredits.splice(key, 1);\n\t\t\t$http({\n\t\t\t\turl: 'fluent-credits/'+index,\n\t\t\t\tmethod: 'delete'\n\t\t\t});\n\t\t}\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createLanguageController', function($rootScope, $scope, $http){\n\t\t\n\t\t$scope.createLanguageURL = 'languages';\n\n\t\t$http({\n\t\t\turl: 'languages/create', \n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.items = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editLanguageController', function($rootScope, $scope, $http, $stateParams){\n\n\t\t$scope.key = $stateParams.id;\n\n\t\t$scope.editLanguageURL = 'languages/'+$scope.key;\n\t\t\n\t\t$http({\n\t\t\turl: 'languages/'+$scope.key+'/edit',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.items = $rootScope.info = res.data;\n\t\t\t$rootScope.info.titleOfLanguage = $scope.key;\n\t\t\t\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('languagesController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\n\t\t$scope.languages = [];\n\t\t\n\t\t$http({\n\t\t\turl: 'languages',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.languages = res.data;\n\t\t});\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createLinePatternController', function($rootScope, $scope, $http, $stateParams){\n\t\t\n\t\t$scope.createLinePatternURL = 'line-patterns';\n\n\t\t$http({\n\t\t\turl: 'api/operators',\n\t\t\tmethod: 'post'\n\t\t}).then(function(res){\n\t\t\t$scope.operators = res.data;\n\t\t});\n\n\t\tif($stateParams.id){\n\t\t\t$http({\n\t\t\t\turl: 'line-patterns/'+$stateParams.id+'/edit',\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$rootScope.info = res.data;\n\t\t\t})\n\t\t}\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('linePatternController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\t\t\n\t\t$http({\n\t\t\turl: 'line-patterns',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.linePatterns = res.data;\n\t\t});\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('importLineController', function($scope){\n\t\t\n\t\t$scope.importLineURL = 'lines/import';\n\n\t});\t","","angular\n\t.module('inspinia')\n\t.controller('marketingCodeController', function($rootScope, $scope, $http){\n\t\t$http({\n\t\t\turl: 'marketing-codes',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.marketingCode = res.data;\n\t\t\t$rootScope.info = res.data;\n\t\t\t$scope.createMarketingPolicyURL = 'marketing-codes/'+$rootScope.user.id;\n\t\t});\n\n\t\t\n\t});","angular\n\t.module('inspinia')\n\t.controller('createModuleController', function($rootScope, $scope, $http){\n\t\t\n\t\t$scope.createTransferToEmailURL = 'modules';\n\n\t\t$http({\n\t\t\turl: 'modules/api',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.modules = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editModuleController', function($rootScope, $scope, $http, $stateParams){\n\t\t\n\t\t$scope.id = $stateParams.id;\n\n\t\t$scope.editTransferToEmailURL = 'modules/'+$scope.id;\n\n\t\t$http({\n\t\t\turl: 'modules/'+$scope.id+'/edit',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data.module;\n\t\t\t$scope.modules = res.data.modules;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('moduleController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\t\t\n\t\t$http({\n\t\t\turl: 'modules',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.modules = res.data;\n\t\t});\n\n\t\t$scope.disable = function(key, index){\n\t\t\t$http({\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: 'modules/'+index\n\t\t\t});\n\t\t\t$scope.modules[key].status = -1;\n\t\t}\n\n\t\t$scope.enable = function(key, index){\n\t\t\t$http({\n\t\t\t\tmethod: 'put',\n\t\t\t\turl: 'modules/enable/'+index\n\t\t\t});\n\t\t\t$scope.modules[key].status = 0;\n\t\t}\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createNewsController', function($rootScope, $scope, $http){\n\t\t$scope.createNewsURL = 'news';\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editNewsController', function($rootScope, $scope, $http, $stateParams){\n\t\t\n\t\t$scope.editNewsURL = 'news/'+$stateParams.news_id;\n\t\t$http({\n\t\t\tmethod: 'get',\n\t\t\turl: 'news/'+$stateParams.news_id+'/edit'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t});\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('showNewsController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\t\t$http({\n\t\t\tmethod: 'get',\n\t\t\turl: 'news'\n\t\t}).then(function(res){\n\t\t\t$scope.news = res.data;\n\t\t});\n\n\t\t$scope.changeStatus = function(key){\n\t\t\t$scope.news[key].status = ($scope.news[key].status == 0) ? 1 : 0;\n\t\t\t$http({\n\t\t\t\tmethod: 'put',\n\t\t\t\turl: 'news/'+$scope.news[key].id,\n\t\t\t\tdata: $scope.news[key]\n\t\t\t});\n\t\t}\n\n\t\t$scope.delete = function(id){\n\t\t\t$http({\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: 'news/'+id\n\t\t\t}).then(function(){\n\t\t\t\t$http({\n\t\t\t\t\tmethod: 'get',\n\t\t\t\t\turl: 'news'\n\t\t\t\t}).then(function(res){\n\t\t\t\t\t$scope.news = res.data;\n\t\t\t\t});\n\t\t\t});\n\n\t\t}\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t        .withDOM('<\"html5buttons\"B>lTfgitp')\n\t        .withButtons([\n\t            {extend: 'copy'},\n\t            {extend: 'csv'},\n\t            {extend: 'excel', title: 'ExampleFile'},\n\t            \n\n\t            {extend: 'print',\n\t                customize: function (win){\n\t                    $(win.document.body).addClass('white-bg');\n\t                    $(win.document.body).css('font-size', '10px');\n\n\t                    $(win.document.body).find('table')\n\t                        .addClass('compact')\n\t                        .css('font-size', 'inherit');\n\t                }\n\t            }\n\t        ]);\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createNumbersBankController', function($rootScope, $scope, $http, $stateParams){\n\t\t\n  \t\t$scope.createNumbersBankURL = 'numbers-bank/define';\n\n  \t\tif($stateParams.id){\n  \t\t\t$http({\n  \t\t\t\turl: 'numbers-bank/'+$stateParams.id+'/edit',\n  \t\t\t\tmethod: 'get'\n  \t\t\t}).then(function(res){\n  \t\t\t\t$rootScope.info = res.data;\n  \t\t\t})\n  \t\t}\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('numbersBankController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\n\t\t$scope.selectedRows = [];\n\t\t\n\t\t$scope.getNumbers = function()\n\t\t{\n\t\t\t$http({\n\t\t\t\turl: 'numbers-bank',\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.numbers = res.data;\n\t\t\t\t$scope.selectedRows = [];\n\t\t\t});\n\t\t}\n\t\t$scope.getNumbers();\n\n\t\t$scope.delete = function(key, id)\n\t\t{\n\t\t\t$http({\n\t\t\t\turl: 'numbers-bank/'+id,\n\t\t\t\tmethod: 'delete'\n\t\t\t}).then(function(){\n\t\t\t\t$http({\n\t\t\t\t\turl: 'numbers-bank',\n\t\t\t\t\tmethod: 'get'\n\t\t\t\t}).then(function(res){\n\t\t\t\t\t$scope.numbers = res.data;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t$scope.selectRow = function(key, id){\n\t    \tif($scope.selectedRows.indexOf(key) !== -1){\n\t    \t\tdelete($scope.selectedRows[$scope.selectedRows.indexOf(key)]);\n\t    \t\treturn;\n\t    \t}\n\t    \t$scope.selectedRows[id] = key;\n\t    }\n\n\t    $scope.removeSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.delete($scope.selectedRows[selected], selected, true);\n\t    \t}\n\t    \t$scope.getNumbers();\n\t    }\n\n\t\tjQuery('body').on('click', '#selectAllRows', function(){\n    \t\tjQuery('input[type=checkbox].selectRow').trigger('click');\n    \t});\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t});\t","","angular\n\t.module('inspinia')\n\t.controller('createOccupationsController', function($rootScope, $scope){\n\t\t\n\t\t$scope.createOccupationsURL = 'occupations';\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editOccupationsController', function($rootScope, $scope, $http, $stateParams){\n\t\t\n\t\t$scope.id = $stateParams.id;\n\n\t\t$scope.editOccupationsURL = 'occupations/'+$scope.id;\n\n\t\t$http({\n\t\t\turl: 'occupations/'+$scope.id+'/edit',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('occupationsController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\n\t\t$scope.selectedRows = [];\n\t\t\n\t\t$scope.getOccupations = function()\n\t\t{\n\t\t\t$http({\n\t\t\t\tmethod: 'get',\n\t\t\t\turl: 'occupations/api'\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.occupations = res.data;\n\t\t\t\t$scope.selectedRows = [];\n\t\t\t});\n\t\t}\n\t\t$scope.getOccupations();\n\n\t\t$scope.delete = function(key, id, many){\n\t\t\t$http({\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: 'occupations/'+id\n\t\t\t});\n\t\t\tif (many == false) {\n\t\t\t\t$scope.occupations.splice(key, 1);\n\t\t\t}\n\t\t}\n\n\t\t$scope.selectRow = function(key, id){\n\t    \tif($scope.selectedRows.indexOf(key) !== -1){\n\t    \t\tdelete($scope.selectedRows[$scope.selectedRows.indexOf(key)]);\n\t    \t\treturn;\n\t    \t}\n\t    \t$scope.selectedRows[id] = key;\n\t    }\n\n\t    $scope.removeSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.delete($scope.selectedRows[selected], selected, true);\n\t    \t}\n\t    \t$scope.getOccupations();\n\t    }\n\n\t\tjQuery('body').on('click', '#selectAllRows', function(){\n    \t\tjQuery('input[type=checkbox].selectRow').trigger('click');\n    \t});\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\n\t\t\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createPlansController', function($rootScope, $scope, $http){\n\t\t\n\t\t$scope.createPlansURL = 'plans';\n\n\t\t$http({\n\t\t\turl: 'plans/create',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.data = res.data;\n\t\t});\n\n\t\t$http({\n\t\t\turl: 'fluent-credits/groups',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.fluentCreditGroups = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editPlansController', function($rootScope, $scope, $http, $stateParams){\n\n\t\t$scope.id = $stateParams.id;\n\t\t\n\t\t$scope.editPlansURL = 'plans/'+$scope.id;\n\n\t\t$http({\n\t\t\turl: 'plans/'+$scope.id+'/edit',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data.plan;\n\t\t\t$scope.data = res.data;\n\t\t});\n\n\t\t$http({\n\t\t\turl: 'fluent-credits/groups',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.fluentCreditGroups = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('plansController', function($rootScope, $scope, $http, DTOptionsBuilder, SweetAlert, $filter){\n\t\t\n\t\t$http({\n\t\t\turl: 'plans',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.plans = res.data;\n\t\t});\n\n\t\t$scope.delete = function(key, index){\n\t\t\tSweetAlert.swal({\n\t\t\t\ttitle: $filter('translate')(\"ARE_YOU_SURE?\"),\n\t\t\t\ttype: \"warning\",\n    \t\t\tshowCancelButton: true,\n    \t\t\tcloseOnConfirm: true,\n    \t\t\tcloseOnCancel: true,\n    \t\t\tconfirmButtonText: $filter('translate')('YES_DELETE_IT'),\n    \t\t\tcancelButtonText: $filter('translate')('NO'),\n\t\t\t}, function(isConfirm){\n\t\t\t\tif(isConfirm){\n\t\t\t\t\t$http({\n\t\t\t\t\t\tmethod: 'delete',\n\t\t\t\t\t\turl: 'plans/'+index\n\t\t\t\t\t});\n\t\t\t\t\t$scope.plans.splice(key, 1);\n\t\t\t\t}\n\t\t\t})\n\t\t};\n\n\t\t$scope.disable = function(key, index){\n\t\t\tSweetAlert.swal({\n\t\t\t\ttitle: $filter('translate')(\"ARE_YOU_SURE?\"),\n\t\t\t\ttype: \"warning\",\n    \t\t\tshowCancelButton: true,\n    \t\t\tcloseOnConfirm: true,\n    \t\t\tcloseOnCancel: true,\n    \t\t\tconfirmButtonText: $filter('translate')('YES_DISABLE_IT'),\n    \t\t\tcancelButtonText: $filter('translate')('NO'),\n\t\t\t}, function(isConfirm){\n\t\t\t\tif(isConfirm){\n\t\t\t\t\t$http({\n\t\t\t\t\t\tmethod: 'delete',\n\t\t\t\t\t\turl: 'plans/disable/'+index\n\t\t\t\t\t});\n\t\t\t\t\t$scope.plans[key].status = -1;\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t$scope.enable = function(key, index){\n\t\t\t$http({\n\t\t\t\tmethod: 'put',\n\t\t\t\turl: 'plans/enable/'+index\n\t\t\t});\n\t\t\t$scope.plans[key].status = 0;\n\t\t};\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createPollController', function($rootScope, $scope, $http){\n\t\t\n\t\t$scope.createPollURL = 'polls';\n\n\t\t$http({\n\t\t\turl: 'lines',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.lines = res.data;\n\t\t});\n\n\t\t$scope.answers = [{answer: ''}];\n\n\t\t$scope.addAnswer = function($event){\n\t\t\t$event.preventDefault();\n\t\t\t$scope.answers.push({answer: ''});\n\t\t}\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editPollController', function($rootScope, $scope, $http, $stateParams){\n\n\t\t$scope.id = $stateParams.id;\n\t\t\n\t\t$scope.editPollURL = 'polls/'+$scope.id;\n\n\t\t$http({\n\t\t\turl: 'lines',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.lines = res.data;\n\t\t});\n\n\t\t$http({\n\t\t\turl: 'polls/'+$scope.id+'/edit',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t\t$scope.answers = res.data.answer;\n\t\t});\n\n\t\t$scope.addAnswer = function($event){\n\t\t\t$event.preventDefault();\n\t\t\t$scope.answers.push('');\n\t\t}\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('pollsController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\n\t\t$scope.selectedRows = [];\n\n\t\t\n\t\t$http({\n\t\t\turl: 'polls',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.polls = res.data;\n\t\t});\n\n\t\t$scope.delete = function(key, index){\n\t\t\t$http({\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: 'polls/'+index\n\t\t\t});\n\t\t\t$scope.polls.splice(key, 1);\n\t\t};\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\n\t    $scope.selectRow = function(key, id){\n\t    \tif($scope.selectedRows.indexOf(key) !== -1){\n\t    \t\tdelete($scope.selectedRows[$scope.selectedRows.indexOf(key)]);\n\t    \t\treturn;\n\t    \t}\n\t    \t$scope.selectedRows[id] = key;\n\t    }\n\n\t    $scope.removeSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.delete($scope.selectedRows[selected], selected, true);\n\t    \t}\n\t    \tsetTimeout(function(){\n\t    \t\t$scope.selectedRows = [];\n\t\t    \t$http({\n\t\t\t\t\turl: 'polls',\n\t\t\t\t\tmethod: 'get'\n\t\t\t\t}).then(function(res){\n\t\t\t\t\t$scope.polls = res.data;\n\t\t\t\t});\n\t    \t}, 500);\n\t    }\n\n\t    jQuery('body').on('click', '#selectAllRows', function(){\n    \t\tjQuery('input[type=checkbox].selectRow').trigger('click');\n    \t});\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('showPollController', function($rootScope, $scope, $http, $stateParams){\n\n\t\t$http({\n\t\t\turl: 'polls/'+$stateParams.id,\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.flotPieData = res.data;\n\t\t});\n\n\t    /**\n\t     * Pie Chart Data\n\t     */\n\t    $scope.flotPieData = [\n\t       \n\t    ];\n\n\t    /**\n\t     * Pie Chart Options\n\t     */\n\t    $scope.flotPieOptions = {\n\t        series: {\n\t            pie: {\n\t                show: true\n\t            }\n\t        },\n\t        grid: {\n\t            hoverable: true\n\t        },\n\t        tooltip: true,\n\t        tooltipOpts: {\n\t            content: \"%p.0%, %s\", // show percentages, rounding to 2 decimal places\n\t            shifts: {\n\t                x: 20,\n\t                y: 0\n\t            },\n\t            defaultTheme: false\n\t        }\n\t    };\n\n\n\t});","angular\n\t.module('inspinia')\n\t.controller('createPostalCodeController', function($rootScope, $scope, $http){\n\t\t\n\t\t$scope.createPostalCodeURL = 'postal-code';\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editPostalCodeController', function($rootScope, $scope, $http, $stateParams){\n\t\t\t\n\t\t$scope.id = $stateParams.id;\n\t\t\t\n\t\t$scope.editPostalCodeURL = 'postal-code/'+$scope.id;\n\n\t\t$http({\n\t\t\tmethod: 'get',\n\t\t\turl: 'postal-code/'+$scope.id+'/edit'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('postalCodeController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\n\t\t$scope.selectedRows = [];\n\t\t\n\t\t$scope.getPostalCodes = function()\n\t\t{\n\t\t\t$http({\n\t\t\t\turl: 'postal-code/api',\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.postalCodes = res.data;\n\t\t\t\t$scope.selectedRows = [];\n\t\t\t});\n\t\t}\n\t\t$scope.getPostalCodes();\n\n\t\t$scope.delete = function(key, index){\n\t\t\t$http({\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: 'postal-code/'+index\n\t\t\t});\n\t\t\t$scope.postalCodes.splice(key, 1);\n\t\t}\n\n\t\t$scope.selectRow = function(key, id){\n\t    \tif($scope.selectedRows.indexOf(key) !== -1){\n\t    \t\tdelete($scope.selectedRows[$scope.selectedRows.indexOf(key)]);\n\t    \t\treturn;\n\t    \t}\n\t    \t$scope.selectedRows[id] = key;\n\t    }\n\n\t    $scope.removeSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.delete($scope.selectedRows[selected], selected, true);\n\t    \t}\n\t    \t$scope.getPostalCodes();\n\t    }\n\n\t\tjQuery('body').on('click', '#selectAllRows', function(){\n    \t\tjQuery('input[type=checkbox].selectRow').trigger('click');\n    \t});\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\n\t\t\t\t    \n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createPreTextController', function($rootScope, $scope, $http){\n\t\t\n\t\t$scope.createPreTextURL = 'pre-texts';\n\n\t\t$http({\n\t\t\turl: 'pre-texts/api',\n\t\t\tmethod: 'get',\n\t\t}).then(function(res){\n\t\t\t$scope.groups = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editPreTextController', function($rootScope, $scope, $http, $stateParams){\n\t\t\n\t\t$scope.id = $stateParams.id;\n\t\t$scope.editPreTextURL = 'pre-texts/'+$scope.id;\n\n\t\t$http({\n\t\t\turl: 'pre-texts/'+$scope.id+'/edit',\n\t\t\tmethod: 'get',\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t});\n\n\t\t$http({\n\t\t\turl: 'pre-texts/api',\n\t\t\tmethod: 'get',\n\t\t}).then(function(res){\n\t\t\t$scope.groups = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('preTextController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\t\t\n\t\t$scope.selectedRows = [];\n\t\t\t\n\t\t$http({\n\t\t\turl: 'pre-texts',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.preTexts = res.data;\n\t\t});\n\n\t\t$scope.selectRow = function(key, id){\n\t    \tif($scope.selectedRows.indexOf(key) !== -1){\n\t    \t\tdelete($scope.selectedRows[$scope.selectedRows.indexOf(key)]);\n\t    \t\treturn;\n\t    \t}\n\t    \t$scope.selectedRows[id] = key;\n\t    }\n\n\t    $scope.removeSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.delete($scope.selectedRows[selected], selected, true);\n\t    \t}\n\t    \tsetTimeout(function(){\n\t    \t\t$scope.selectedRows = [];\n\t\t    \t$http({\n\t\t\t\t\turl: 'pre-texts',\n\t\t\t\t\tmethod: 'get'\n\t\t\t\t}).then(function(res){\n\t\t\t\t\t$scope.preTexts = res.data;\n\t\t\t\t});\n\t    \t}, 500);\n\t    }\n\n\t\tjQuery('body').on('click', '#selectAllRows', function(){\n    \t\tjQuery('input[type=checkbox].selectRow').trigger('click');\n    \t});\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t        .withDOM('<\"html5buttons\"B>lTfgitp')\n\t        .withButtons([\n\t            {extend: 'copy'},\n\t            {extend: 'csv'},\n\t            {extend: 'excel', title: 'ExampleFile'},\n\t            \n\n\t            {extend: 'print',\n\t                customize: function (win){\n\t                    $(win.document.body).addClass('white-bg');\n\t                    $(win.document.body).css('font-size', '10px');\n\n\t                    $(win.document.body).find('table')\n\t                        .addClass('compact')\n\t                        .css('font-size', 'inherit');\n\t                }\n\t            }\n\t        ]);\n\n\t    $scope.delete = function(key, id){\n\t    \t$http({\n\t    \t\turl: 'pre-texts/' + id,\n\t    \t\tmethod: 'delete'\n\t    \t});\n\t    \t$scope.preTexts.splice(key, 1);\n\t    }\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createPriceGroupController', function($rootScope, $scope, $http){\n\n\t\t$scope.savePriceGroupURL = 'price-group';\n\n\t\t$http({\n\t\t\tmethod: 'get', \n\t\t\t'url': 'price-group/api'\n\t\t}).then(function(res){\n\t\t\t$scope.groups = res.data;\n\t\t});\n\n\t\t$http({\n\t\t\tmethod: 'get', \n\t\t\t'url': 'price-group/create'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t});\n\n\t});","angular\n\t.module('inspinia')\n\t.controller('editPriceGroupController', function($rootScope, $scope, $http, $stateParams){\n\t\t\n\t\t$scope.id = $stateParams.id;\n\t\t$scope.editPriceGroupURL = 'price-group/' + $scope.id;\n\t\t$http({\n\t\t\tmethod: 'get',\n\t\t\turl: 'price-group/' + $scope.id + '/edit',\n\t\t\tdata: []\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t});\n\n\t\t$http({\n\t\t\tmethod: 'get', \n\t\t\t'url': 'price-group/api'\n\t\t}).then(function(res){\n\t\t\t$scope.groups = res.data;\n\t\t});\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('priceGroupHomeController', function($rootScope, $scope, $filter, $http, DTOptionsBuilder, SweetAlert){\n\t\t\n\t\t$http({\n\t\t\turl: 'price-group',\n\t\t\t'method': 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.groups = res.data;\n\t\t});\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t        .withDOM('<\"html5buttons\"B>lTfgitp')\n\t        .withButtons([\n\t            {extend: 'copy'},\n\t            {extend: 'csv'},\n\t            {extend: 'excel', title: 'ExampleFile'},\n\t            \n\n\t            {extend: 'print',\n\t                customize: function (win){\n\t                    $(win.document.body).addClass('white-bg');\n\t                    $(win.document.body).css('font-size', '10px');\n\n\t                    $(win.document.body).find('table')\n\t                        .addClass('compact')\n\t                        .css('font-size', 'inherit');\n\t                }\n\t            }\n\t        ]);\n\n\t    $scope.delete = function(key, group){\n\t    \tSweetAlert.swal({\n\t\t\t\ttitle: $filter('translate')(\"ARE_YOU_SURE?\"),\n\t\t\t\ttype: \"warning\",\n    \t\t\tshowCancelButton: true,\n    \t\t\tcloseOnConfirm: true,\n    \t\t\tcloseOnCancel: true,\n    \t\t\tconfirmButtonText: $filter('translate')('YES_DELETE_IT'),\n    \t\t\tcancelButtonText: $filter('translate')('NO'),\n\t\t\t}, function(isConfirm){\n\t\t\t\tif(isConfirm){\n\t\t\t    \t$http({\n\t\t\t    \t\tmethod: 'delete', \n\t\t\t    \t\turl: 'price-group/'+group\n\t\t\t    \t}).then(function(){\n\t\t\t    \t\t$scope.groups.splice(key,1);\n\t\t\t    \t});\n\t\t\t    }\n\t\t\t});\n\t    }\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('smsReceiversEditController', function($rootScope, $scope, $http, $stateParams){\n\n\t\t$scope.editReceiveSettingURL = 'receive-sms/'+$stateParams.id;\n\n\t\t$http({\n\t\t\turl: 'receive-sms/'+$stateParams.id,\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t});\n\n\t});","angular\n\t.module('inspinia')\n\t.controller('smsReceiversController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\t\t\n\t\t$scope.selectedRows = [];\n\n\t\t$scope.lines = $scope.editURL = $scope.editNumber = [];\n\t\t$scope.editURLID = '';\n\t\t$scope.editNumberID = '';\n\n\t\t$http({\n\t\t\turl: 'receive-sms',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.lines = res.data;\n\t\t});\n\n\t\t$scope.editRow = function(key, index){\n\t\t\t$scope.editURLID = index;\n\t\t\t$scope.editNumberID = index;\n\t\t}\n\n\t\t$scope.delete = function(id){\n\t\t\t$http({\n\t\t\t\turl: 'receive-sms/'+id,\n\t\t\t\tmethod: 'delete'\n\t\t\t}).then(function(){\n\t\t\t\t$http({\n\t\t\t\t\turl: 'receive-sms',\n\t\t\t\t\tmethod: 'get'\n\t\t\t\t}).then(function(res){\n\t\t\t\t\t$scope.lines = res.data;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t$scope.saveEditURL = function(line){\n\t\t\t$scope.editURL[line.id] = $scope.editURL[line.id]+'?from=FROM&to=TO&text=TEXT';\n\t\t\t$http({\n\t\t\t\turl: 'receive-sms/'+$scope.editURLID,\n\t\t\t\tmethod: 'put',\n\t\t\t\tdata: {\n\t\t\t\t\turl: $scope.editURL[line.id],\n\t\t\t\t\treceiver_number: $scope.editNumber[line.id]\n\t\t\t\t}\n\t\t\t});\n\t\t\tline.receivers.redirect_url = $scope.editURL[line.id];\n\t\t\t$scope.editURLID = '';\n\t\t\t$scope.editNumberID = '';\n\t\t\t// $scope.editURL[line.id] = '';\n\t\t}\n\n\t\t$scope.selectRow = function(key, id){\n\t    \tif($scope.selectedRows.indexOf(key) !== -1){\n\t    \t\tdelete($scope.selectedRows[$scope.selectedRows.indexOf(key)]);\n\t    \t\treturn;\n\t    \t}\n\t    \t$scope.selectedRows[id] = key;\n\t    }\n\n\t    $scope.removeSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.delete($scope.selectedRows[selected], selected, true);\n\t    \t}\n\t    \tsetTimeout(function(){\n\t    \t\t$scope.selectedRows = [];\n\t\t    \t$http({\n\t\t\t\t\turl: 'receive-sms',\n\t\t\t\t\tmethod: 'get'\n\t\t\t\t}).then(function(res){\n\t\t\t\t\t$scope.lines = res.data;\n\t\t\t\t});\n\t    \t}, 500);\n\t    }\n\n\t    jQuery('body').on('click', '#selectAllRows', function(){\n    \t\tjQuery('input[type=checkbox].selectRow').trigger('click');\n    \t});\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('sendFromMobileCreateController', function($scope){\n\t\t\n\t\t$scope.createSendFromMobileURL = 'send-from-mobile';\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('sendFromMobileHomeController', function($scope, $http, DTOptionsBuilder){\n\t\t$http({\n\t\t\turl: 'send-from-mobile',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.sendFromMobiles = res.data; \n\t\t});\n\n\t\t$scope.delete = function(key, id){\n\t\t\t$http({\n\t\t\t\turl: 'send-from-mobile/'+id,\n\t\t\t\tmethod: 'delete'\n\t\t\t});\n\t\t\t$http({\n\t\t\t\turl: 'send-from-mobile',\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.sendFromMobiles = res.data; \n\t\t\t});\n\t\t}\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('checkoutController', function($rootScope, $scope, $http){\n\n\t\t$scope.selectedGate = '';\n\t\t$scope.movingInProgress = false;\n\t\t$scope.movingURL = 'financial/checkout/moving-to-gateway';\n\t\t\n\t\t$http({\n\t\t\turl: 'financial/checkout/gateways',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.gateways = res.data;\n\t\t});\n\n\t\t$scope.gatewaySelected = function(gateway){\n\t\t\t$scope.selectedGate = gateway;\n\t\t\tvar id = 'gateway-'+gateway;\n\t\t\tjQuery('#'+id).trigger('submit');\n\t\t}\n\n\t\t// $scope.goToGateway = function(){\n\t\t// \t$scope.movingInProgress = true;\n\t\t// \t$http({\n\t\t// \t\turl: 'financial/checkout/moving-to-gateway',\n\t\t// \t\tmethod: 'post',\n\t\t// \t\tdata: {\n\t\t// \t\t\tgateway: $scope.selectedGate,\n\t\t// \t\t}\n\t\t// \t}).then(function(res){\n\t\t// \t\twindow.location.href = res.data.url;\n\t\t// \t});\n\t\t// }\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('invoiceController', function($rootScope, $scope, $http){\n\t\t\n\t\t$http({\n\t\t\turl: 'financial/invoice',\n\t\t\tmehtod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.invoice = res.data;\n\t\t});\n\n\t\t$scope.delete = function(key, index){\n\t\t\t$http({\n\t\t\t\turl: 'shop/modules/remove-from-invoice/'+index,\n\t\t\t\tmethod: 'delete'\n\t\t\t});\n\t\t\t$http({\n\t\t\t\turl: 'financial/invoice',\n\t\t\t\tmehtod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.invoice = res.data;\n\t\t\t});\n\t\t}\n\n\t\t$scope.checkout = function(){\n\t\t\t$http({\n\t\t\t\turl: 'financial/invoice/offline-checkout',\n\t\t\t\tmethod: 'post'\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.shopping_result = res.data;\n\t\t\t\tif(res.data.result == 'success'){\n\t\t\t\t\t$http({\n\t\t\t\t\t\turl: 'financial/invoice',\n\t\t\t\t\t\tmehtod: 'get'\n\t\t\t\t\t}).then(function(res){\n\t\t\t\t\t\t$scope.invoice = res.data;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('lineExtensionController', function($rootScope, $scope, $http, DTOptionsBuilder, SweetAlert, $filter){\n\n\t\t$scope.addedLines = [];\n\t\t\n\t\t$http({\n\t\t\turl: 'shop/lines/extension/list',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.lines = res.data;\n\t\t});\n\n\t\t$scope.buy = function(key, line){\n\t\t\t$scope.addedLines.push(key);\n\t\t\tSweetAlert.swal({ \n\t\t\t\ttitle: '',\n\t\t\t\ttext: $filter('translate')('LINE_ADDED_TO_SHOPPING_INVOICE')\n\t\t\t});\n\t\t\t$http({\n\t\t\t\turl: 'shop/lines/add-to-invoice',\n\t\t\t\tmethod: 'post',\n\t\t\t\tdata: {\n\t\t\t\t\tline_id: line.id\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('shopLinesController', function($rootScope, $scope, $http, DTOptionsBuilder, SweetAlert, $filter){\n\n\t\t$scope.addedLines = [];\n\t\t\n\t\t$http({\n\t\t\turl: 'shop/lines/list',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.lines = res.data;\n\t\t});\n\n\t\t$scope.buy = function(key, line){\n\t\t\t$scope.addedLines.push(key);\n\t\t\tSweetAlert.swal({ \n\t\t\t\ttitle: '',\n\t\t\t\ttext: $filter('translate')('LINE_ADDED_TO_SHOPPING_INVOICE')\n\t\t\t});\n\t\t\t$http({\n\t\t\t\turl: 'shop/lines/add-to-invoice',\n\t\t\t\tmethod: 'post',\n\t\t\t\tdata: {\n\t\t\t\t\tline_id: line.id\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('shopModulesController', function($rootScope, $scope, $http, DTOptionsBuilder, notify, $filter){\n\n\t\t$scope.addedModules = [];\n\t\t\n\t\t$http({\n\t\t\turl: 'shop/modules/list',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.modules = res.data;\n\t\t});\n\n\t\t$scope.buy = function(key, index){\n\t\t\t$scope.addedModules.push(key);\n\t\t\tnotify({ message: $filter('translate')('MODULE_ADDED_TO_SHOPPING_INVOICE'), classes: 'alert-info', templateUrl: 'views/common/notify.html'});\n\t\t\t$http({\n\t\t\t\turl: 'shop/modules/add-to-invoice',\n\t\t\t\tmethod: 'post',\n\t\t\t\tdata: {\n\t\t\t\t\tmodule_id: index\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('shopSpecialsController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\t\t\n\t\t$http({\n\t\t\turl: 'shop/specials/list', \n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.specials = res.data;\n\t\t});\t\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('upgradeCreditController', function($rootScope, $scope, $http, $state, SweetAlert){\n\t\t\n\t\t$scope.upgradeByCodeURL = 'shop/charge/upgrade/code';\n\t\t$scope.fluentCredits = [];\n\n\t\t$http({\n\t\t\turl: 'shop/charge/upgrade/fluent-credits',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\tfor(ceil in res.data){\n\t\t\t\t$scope.fluentCredits[ceil] = res.data[ceil];\n\t\t\t}\n\t\t});\n\n\t\t$scope.submitChargingBill = function(){\n\t\t\t$http({\n\t\t\t\turl: 'shop/charge/upgrade/cash',\n\t\t\t\tmethod: 'post',\n\t\t\t\tdata: {\n\t\t\t\t\tcredit: $rootScope.info.credit\n\t\t\t\t}\n\t\t\t}).then(function(res){\n\t\t\t\tif(res.data.result == 'success'){\n\t\t\t\t\t$state.go('app.shop.checkout');\n\t\t\t\t} else {\n\t\t\t\t\tSweetAlert.swal({ \n\t\t\t\t\t\ttitle: '',\n\t\t\t\t\t\ttext: res.data.errors,\n\t\t\t\t\t\ttype: 'warning'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, function(err){\n\t\t\t\tSweetAlert.swal({ \n\t\t\t\t\ttitle: '',\n\t\t\t\t\ttext: err.data.credit[0],\n\t\t\t\t\ttype: 'warning'\n\t\t\t\t});\n\t\t\t})\n\t\t}\n\n\t\t$scope.calculateSMSFee = function(credit){\n\t\t\tvar fee = 0;\n\t\t\tcredit = parseInt(credit);\n\t\t\tvar length = $scope.fluentCredits.length;\n\t\t\tfor(ceil in $scope.fluentCredits){\n\t\t\t\tif(credit <= ceil) {\n\t\t\t\t\tfee = parseInt($scope.fluentCredits[ceil]);\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tfee = parseInt($scope.fluentCredits[length-1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t$scope.smsFee = fee;\n\t\t}\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('sendBrandSMSController', function($rootScope, $scope, $http, $stateParams, charactersFactory){\n\t\t\n\t\t$scope.sendBrandSMSURL = 'sms/send/to/brand';\n\n\t\t$scope.groups = [];\n\t\t$scope.contacts = [];\n\t\t$scope.selectedGroup = null;\n\n\t\t$http({\n\t\t\turl: 'contacts/groups',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.groups = res.data;\n\t\t});\n\n\t\t$http({\n\t\t\turl: 'contacts/contact',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.contacts = res.data;\n\t\t});\n\n\n\t\t$scope.messageCharacters = 0;\n\t\t$scope.calculateCharacters = function(text){\n\t\t\t$scope.messageCharacters = (typeof text != 'undefined') ? text.length : 0;\n\t\t\t$scope.messagePages = charactersFactory.calculate($rootScope.lineIdNumbers[$rootScope.info.line], $rootScope.info.text);\n\t\t}\n\n\t\tif($stateParams.id){\n\t\t\t$http({\n\t\t\t\turl: 'sms/input/'+$stateParams.id,\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$rootScope.info = res.data;\n\t\t\t\t$scope.calculateCharacters($rootScope.info.text);\n\t\t\t});\n\t\t}\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('sendCitySMSController', function($rootScope, $scope, $http, $stateParams, charactersFactory){\n\n\t\t$scope.province = $scope.city = null;\n\t\t\n\t\t$scope.messageCharacters = 0;\n\t\t// $scope.maxSendingCount = 0;\n\n\t\t$scope.sendCitySMSURL = 'sms/send/to/city';\n\n\t\t$scope.provinces = [];\n\n\t\t$scope.cityChanged = function(city){\n\t\t\t$scope.city = city;\n\t\t}\n\n\t\t$scope.provinceChanged = function(province){\n\t\t\t$scope.province = province.id;\n\t\t}\n\n\t\t$scope.cityChanged = function(city){\n\t\t\t$http({\n\t\t\t\turl: 'numbers-bank/count/'+city,\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.sendingCountRelative = res.data.ranges;\n\t\t\t\t$scope.maxSendingCount = res.data.max;\n\t\t\t});\n\t\t}\n\n\t\t$http({\n\t\t\turl: 'numbers-bank/cities',\n\t\t\tmethod: 'post'\n\t\t}).then(function(res){\n\t\t\t$scope.provinces = res.data;\n\t\t});\n\n\t\t$scope.calculateCharacters = function(text){\n\t\t\t$scope.messageCharacters = (typeof text != 'undefined') ? text.length : 0;\n\t\t\t$scope.messagePages = charactersFactory.calculate($rootScope.lineIdNumbers[$rootScope.info.line], $rootScope.info.text);\n\t\t}\n\n\t\tif($stateParams.id){\n\t\t\t$http({\n\t\t\t\turl: 'sms/input/'+$stateParams.id,\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$rootScope.info = res.data;\n\t\t\t\t$scope.calculateCharacters($rootScope.info.text);\n\t\t\t\t$scope.provinceChanged($rootScope.info.province);\n\t\t\t\t$scope.cityChanged($rootScope.info.city);\n\t\t\t});\n\t\t}\n\n\t});","angular\n\t.module('inspinia')\n\t.controller('sendGenderSMSController', function($rootScope, $scope, $http, $stateParams, charactersFactory){\n\n\t\t$scope.messageCharacters = 0;\n\t\t$scope.availableNumbers = 0;\n\t\t\n\t\t$scope.calculateCharacters = function(text){\n\t\t\t$scope.messageCharacters = (typeof text != 'undefined') ? text.length : 0;\n\t\t\t$scope.messagePages = charactersFactory.calculate($rootScope.lineIdNumbers[$rootScope.info.line], $rootScope.info.text);\n\t\t}\n\t\t\n\t\t$scope.sendGenderSMSURL = 'sms/send/to/gender';\n\n\t\tif($stateParams.id){\n\t\t\t$http({\n\t\t\t\turl: 'sms/input/'+$stateParams.id,\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$rootScope.info = res.data;\n\t\t\t\t$scope.calculateCharacters($rootScope.info.text);\n\t\t\t});\n\t\t}\n\n\t\t$scope.provinces = [];\n\n\t\t$http({\n\t\t\turl: 'api/rahyabbulk/provinces',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.provinces = res.data;\n\t\t});\n\n\t\t$scope.getCities = function(){\n\t\t\t$http({\n\t\t\t\turl: 'api/rahyabbulk/cities?province='+$rootScope.info.province,\n\t\t\t\tmethod: 'get',\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.cities = res.data;\n\t\t\t});\n\t\t}\n\n\t\t$scope.agesFrom = [];\n\t\t$scope.agesTo = [];\n\t\tfor(var i=1320;i<=1380;i++){\n\t\t\t$scope.agesFrom.push(i);\n\t\t}\n\n\t\t$scope.ageFromChanged = function(){\n\t\t\tfor(var i=$rootScope.info.fromAge;i<=1380;i++){\n\t\t\t\t$scope.agesTo.push(i);\n\t\t\t}\n\t\t}\n\n\t\t$scope.preNumberInvalid = false;\n\t\t$scope.checkPreNumber = function(){\n\t\t\t$scope.preNumberInvalid = (!$rootScope.info.preNumber.match(/^91[1-9]{0,2}$/)) ? true : false;\n\t\t}\n\n\t\t$scope.calculateMessageCount = function($event){\n\t\t\t$event.preventDefault();\n\t\t\t$http({\n\t\t\t\turl: 'api/rahyabbulk/count',\n\t\t\t\tmethod: 'post',\n\t\t\t\tdata: $rootScope.info\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.availableNumbers = res.data;\n\t\t\t})\n\t\t}\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('showGenderSMSList', function($scope, $http, DTOptionsBuilder){\n\n\t\t$scope.selectedRows = [];\n\n\t\t$http({\n\t\t\turl: 'sms/list/gender',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.messages = res.data;\n\t\t});\n\n\t\t$scope.selectRow = function(key, id){\n\t    \tif($scope.selectedRows.indexOf(key) !== -1){\n\t    \t\tdelete($scope.selectedRows[$scope.selectedRows.indexOf(key)]);\n\t    \t\treturn;\n\t    \t}\n\t    \t$scope.selectedRows[id] = key;\n\t    }\n\n\t    $scope.removeSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.delete($scope.selectedRows[selected], selected, true);\n\t    \t}\n\t    \tsetTimeout(function(){\n\t    \t\t$scope.selectedRows = [];\n\t\t    \t$http({\n\t\t\t\t\turl: 'sms/report',\n\t\t\t\t\tmethod: 'get'\n\t\t\t\t}).then(function(res){\n\t\t\t\t\t$scope.messages = res.data;\n\t\t\t\t});\n\t    \t}, 500);\n\t    }\n\n\t    $scope.delete = function(id){\n\t    \t$http({\n\t    \t\turl: 'sms/gender/remove/'+id,\n\t    \t\tmethod: 'delete'\n\t    \t}).then(function(){\n\t    \t\t$http({\n\t\t\t\t\turl: 'sms/list/gender',\n\t\t\t\t\tmethod: 'get'\n\t\t\t\t}).then(function(res){\n\t\t\t\t\t$scope.messages = res.data;\n\t\t\t\t});\n\t    \t});\n\t    }\n\n\t    jQuery('body').on('click', '#selectAllRows', function(){\n    \t\tjQuery('input[type=checkbox].selectRow').trigger('click');\n    \t});\n\n    \t$scope.dtOptions = DTOptionsBuilder.newOptions()\n    \t    .withDOM('<\"html5buttons\"B>lTfgitp')\n    \t    .withButtons([\n    \t        {extend: 'copy'},\n    \t        {extend: 'csv'},\n    \t        {extend: 'excel', title: 'ExampleFile'},\n    \t        \n    \t\n    \t        {extend: 'print',\n    \t            customize: function (win){\n    \t                $(win.document.body).addClass('white-bg');\n    \t                $(win.document.body).css('font-size', '10px');\n    \t\n    \t                $(win.document.body).find('table')\n    \t                    .addClass('compact')\n    \t                    .css('font-size', 'inherit');\n    \t            }\n    \t        }\n    \t    ]);\n\n\t});","angular\n\t.module('inspinia')\n\t.controller('sendGroupSMSController', function($rootScope, $scope, $http, $modal, $stateParams, charactersFactory){\n\n\t\t$scope.sendGroupSMSURL = 'sms/send/to/group';\n\t\t\n\n\t\t$scope.groups = [];\n\t\t$scope.contacts = [];\n\t\t$scope.selectedGroup = null;\n\t\t$scope.messageCharacters = 0;\n\n\t\t$http({\n\t\t\turl: 'contacts/groups',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.groups = res.data;\n\t\t});\n\n\t\t$http({\n\t\t\turl: 'contacts/contact',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.contacts = res.data;\n\t\t});\n\n\t\t$http({\n\t\t\turl: 'sms/schedules',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.schedules = res.data;\n\t\t});\n\n\t\t$scope.newNumber = function(res){\n\t\t\tif(isNaN(res)) return;\n\t\t\treturn {\n\t\t\t\tname: res,\n\t\t\t\tnumber: res\n\t\t\t};\n\t\t}\n\n\t\t$scope.openDropzoneModal = function(){\n\t\t\t$modal.open({\n                templateUrl: 'views/sms/import_contacts.html',\n            });\n\t\t}\n\n\t\t$rootScope.$on('fileUploaded', function(res, msg){\n\t\t\t$scope.$apply(function(){\n\t\t\t\tvar numbers = '';\n\t\t\t\tfor(number in msg){\n\t\t\t\t\tnumbers += msg[number]+',';\n\t\t\t\t}\n\t\t\t\t$rootScope.info.numbers = numbers;\n\t\t\t});\n\t\t});\n\n\t\t$scope.calculateCharacters = function(text){\n\t\t\t$scope.messageCharacters = (typeof text != 'undefined') ? text.length : 0;\n\t\t\t$scope.messagePages = charactersFactory.calculate($rootScope.lineIdNumbers[$rootScope.info.line], $rootScope.info.text);\n\t\t}\n\n\t\tif($stateParams.id){\n\t\t\t$http({\n\t\t\t\turl: 'sms/input/'+$stateParams.id,\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$rootScope.info = res.data;\n\t\t\t\t$scope.calculateCharacters($rootScope.info.text);\n\t\t\t});\n\t\t}\n\n\t});","angular\n\t.module('inspinia')\n\t.controller('sendInternationalSMSController', function($rootScope, $scope, $http, $stateParams, charactersFactory){\n\t\t\n\t\t$scope.sendInternationalSMSURL = 'sms/send/to/international';\n\n\t\t\n\t\t$scope.messageCharacters = 0;\n\t\t$scope.calculateCharacters = function(text){\n\t\t\t$scope.messageCharacters = (typeof text != 'undefined') ? text.length : 0;\n\t\t\t$scope.messagePages = charactersFactory.calculate($rootScope.lineIdNumbers[$rootScope.info.line], $rootScope.info.text);\n\t\t}\n\n\t\t$scope.groups = [];\n\t\t$scope.contacts = [];\n\t\t$scope.selectedGroup = null;\n\n\t\t$http({\n\t\t\turl: 'contacts/groups',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.groups = res.data;\n\t\t});\n\n\t\t$http({\n\t\t\turl: 'contacts/contact',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.contacts = res.data;\n\t\t});\n\n\t\tif($stateParams.id){\n\t\t\t$http({\n\t\t\t\turl: 'sms/input/'+$stateParams.id,\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$rootScope.info = res.data;\n\t\t\t\t$scope.calculateCharacters($rootScope.info.text);\n\t\t\t});\n\t\t}\n\n\t});\t","angular\n    .module('inspinia')\n    .controller('sendMapSMSController', function($rootScope, $scope, $http, $timeout) {\n\n        $scope.sendMessages = function() {\n            $http({\n                url: 'sms/send/to/map',\n                method: 'post',\n                data: {\n                    polygon: $rootScope.info.selectedPolygon,\n                    amount: $rootScope.info.amount,\n                    text: $rootScope.info.text,\n                    sendOn: $rootScope.info.sendOn,\n                    line: $rootScope.info.line\n                }\n            }).then(function(res) {\n                alert(res.data.message);\n            });\n        }\n    });","angular\n\t.module('inspinia')\n\t.controller('sendOccupationSMSController', function($rootScope, $scope, $http, $stateParams, charactersFactory){\n\n\t\t\n\t\t$scope.messageCharacters = 0;\n\n\t\t$scope.sendOccupationSMSURL = 'sms/send/to/occupation';\n\n\t\t$scope.occupations = [];\n\n\t\t$http({\n\t\t\tmethod: 'get',\n\t\t\turl: 'occupations'\n\t\t}).then(function(res){\n\t\t\t$scope.occupations = res.data;\n\t\t});\n\n\t\t$scope.calculateCharacters = function(text){\n\t\t\t$scope.messageCharacters = (typeof text != 'undefined') ? text.length : 0;\n\t\t\t$scope.messagePages = charactersFactory.calculate($rootScope.lineIdNumbers[$rootScope.info.line], $rootScope.info.text);\n\t\t}\n\n\t\t$scope.occupationChanged = function(occupation){\n\t\t\t$http({\n\t\t\t\turl: 'occupations/count/'+occupation,\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.sendingCountRelative = res.data.ranges;\n\t\t\t\t$scope.maxSendingCount = res.data.max;\n\t\t\t});\n\t\t}\n\n\t\tif($stateParams.id){\n\t\t\t$http({\n\t\t\t\turl: 'sms/input/'+$stateParams.id,\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$rootScope.info = res.data;\n\t\t\t\t$scope.occupationChanged($rootScope.info.occupation);\n\t\t\t\t$scope.calculateCharacters($rootScope.info.text);\n\t\t\t});\n\t\t}\n\n\t});","angular\n\t.module('inspinia')\n\t.controller('sendPostalCodeSMSController', function($rootScope, $scope, $http, $stateParams, charactersFactory){\n\n\t\t\n\t\t$scope.messageCharacters = 0;\n\n\t\t$scope.sendPostalCodeSMSURL = 'sms/send/to/postal-code';\n\n\t\t$scope.postalCodes = [];\n\n\t\t$scope.province = $scope.city = null;\n\t\t$scope.provinces = [];\n\n\t\t$scope.cityChanged = function(city){\n\t\t\t$scope.city = city;\n\t\t\t$http({\n\t\t\t\turl: 'postal-code?city='+city,\n\t\t\t\tmethod: 'get',\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.postalCodes = res.data\n\t\t\t});\n\t\t}\n\n\t\t$scope.provinceChanged = function(province){\n\t\t\t$scope.province = province.id;\n\t\t}\n\t\t$http({\n\t\t\turl: 'numbers-bank/cities',\n\t\t\tmethod: 'post'\n\t\t}).then(function(res){\n\t\t\t$scope.provinces = res.data;\n\t\t});\n\n\t\t$scope.calculateCharacters = function(text){\n\t\t\t$scope.messageCharacters = (typeof text != 'undefined') ? text.length : 0;\n\t\t\t$scope.messagePages = charactersFactory.calculate($rootScope.lineIdNumbers[$rootScope.info.line], $rootScope.info.text);\n\t\t}\n\n\t\tif($stateParams.id){\n\t\t\t$http({\n\t\t\t\turl: 'sms/input/'+$stateParams.id,\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$rootScope.info = res.data;\n\t\t\t\t$scope.calculateCharacters($rootScope.info.text);\n\t\t\t\t$scope.cityChanged($rootScope.info.city);\n\t\t\t});\n\t\t}\n\n\t});","angular\n\t.module('inspinia')\n\t.controller('receivedSMSController', function($rootScope, $scope, $http, $modal, DTOptionsBuilder){\n\n\t\t$scope.selectedRows = [];\n\n\t\t$scope.getMessages = function()\n\t\t{\n\t\t\t$http({\n\t\t\t\turl: 'sms/report/received',\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.messages = res.data;\n\t\t\t\t$scope.selectedRows = [];\n\t\t\t});\n\t\t}\n\n\t\t$scope.getMessages();\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t        .withDOM('<\"html5buttons\"B>lTfgitp')\n\t        .withButtons([\n\t            {extend: 'copy'},\n\t            {extend: 'csv'},\n\t            {extend: 'excel', title: 'ExampleFile'},\n\t            \n\n\t            {extend: 'print',\n\t                customize: function (win){\n\t                    $(win.document.body).addClass('white-bg');\n\t                    $(win.document.body).css('font-size', '10px');\n\n\t                    $(win.document.body).find('table')\n\t                        .addClass('compact')\n\t                        .css('font-size', 'inherit');\n\t                }\n\t            }\n\t        ]);\n\n\t    $scope.forward = function(event, message){\n\t    \t$rootScope.messageToForward = message;\n\t    \t$modal.open({\n\t    \t\ttemplateUrl: 'views/sms/forward-modal.html',\n\t    \t\tcontroller: 'forwardMessageController'\n\t    \t});\n\t    }\n\n\t    $scope.reply = function(event, message){\n\t    \t$rootScope.messageToReply = message;\n\t    \t$modal.open({\n\t    \t\ttemplateUrl: 'views/sms/reply-modal.html',\n\t    \t\tcontroller: 'replyMessageController'\n\t    \t});\n\t    }\n\n\t    $scope.delete = function(key, index, multi){\n\t    \t$http({\n\t\t\t\t'method': 'delete',\n\t\t\t\t'url': 'sms/report/received/'+index\n\t\t\t});\n\t    }\n\n\t    $scope.selectRow = function(key, id){\n\t    \tif($scope.selectedRows.indexOf(key) !== -1){\n\t    \t\tdelete($scope.selectedRows[$scope.selectedRows.indexOf(key)]);\n\t    \t\treturn;\n\t    \t}\n\t    \t$scope.selectedRows[id] = key;\n\t    }\n\n\t    $scope.removeSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.delete($scope.selectedRows[selected], selected);\n\t    \t}\n\t    \t$scope.getMessages();\n\t    }\n\n\t    jQuery('body').on('click', '#selectAllRows', function(){\n    \t\tjQuery('input[type=checkbox].selectRow').trigger('click');\n    \t});\n\n\t})\n\t.controller('forwardMessageController', function($rootScope, $scope, $http, $modalInstance){\n\t\t$scope.message = $rootScope.messageToForward;\n\n\t    $rootScope.$on('successfulRequest', function(){\n\t    \t$modalInstance.close();\n\t    });\n\n\t    $scope.sendSingleSMSURL = 'sms/send/to';\n\n\t    $scope.cancel = function () {\n\t        $modalInstance.dismiss('cancel');\n\t    };\n\t})\n\t.controller('replyMessageController', function($rootScope, $scope, $http, $modalInstance){\n\t\t$scope.message = $rootScope.messageToReply;\n\n\t    $rootScope.$on('successfulRequest', function(){\n\t    \t$modalInstance.close();\n\t    });\n\n\t    $scope.sendSingleSMSURL = 'sms/send/to';\n\n\t    $scope.cancel = function () {\n\t        $modalInstance.dismiss('cancel');\n\t    };\n\t});","angular\n\t.module('inspinia')\n\t.controller('reportSMSController', function($rootScope, $scope, $http, DTOptionsBuilder, $modal, $state, $ocLazyLoad){\n\t\t\n\t\t$scope.messages = [];\n\t\t$rootScope.groupMessages = [];\n\t\t$scope.selectedRows = [];\n\n\t\t$scope.getMessages = function(){\n\t\t\t$http({\n\t\t\t\turl: 'sms/report',\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.messages = res.data;\n\t\t\t\t$scope.selectedRows = [];\n\t\t\t});\n\t\t}\n\t\t$scope.getMessages();\n\n\t\t$scope.resendProcessing = false;\n\n\t\t$scope.retry = function(){\n\t\t\t$http({\n\t\t\t\turl: 'sms/retry',\n\t\t\t\tmethod: 'post'\n\t\t\t});\n\t\t\t$scope.resendProcessing = true;\n\t\t}\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t        .withDOM('<\"html5buttons\"B>lTfgitp')\n\t        .withButtons([\n\t            {extend: 'copy'},\n\t            {extend: 'csv'},\n\t            {extend: 'excel', title: 'ExampleFile'},\n\t            \n\n\t            {extend: 'print',\n\t                customize: function (win){\n\t                    $(win.document.body).addClass('white-bg');\n\t                    $(win.document.body).css('font-size', '10px');\n\n\t                    $(win.document.body).find('table')\n\t                        .addClass('compact')\n\t                        .css('font-size', 'inherit');\n\t                }\n\t            }\n\t        ]);\n\n\t    $scope.delete = function(key, message_id){\n\t    \t$http({\n\t    \t\tmethod: 'delete',\n\t    \t\turl: 'sms/delete/sent/'+message_id,\n\t    \t});\n\t    }\n\n\t    $scope.resend = function(queueName, inputId){\n\t    \tif(queueName == '') return;\n\t    \tvar route = queueName.replace('SMS', '', queueName);\n\t    \t$state.go('app.sms.'+route+'Resend', {id: inputId});\n\t    \t// $http({\n\t    \t// \tmethod: 'post',\n\t    \t// \turl: 'sms/resend',\n\t    \t// \tdata: message\n\t    \t// }).then(function(){\n\t    \t// \t$scope.getMessages();\n\t    \t// });\t\n\t    }\n\n\t    $scope.selectRow = function(key, id){\n\t    \tif($scope.selectedRows.indexOf(key) !== -1){\n\t    \t\tdelete($scope.selectedRows[$scope.selectedRows.indexOf(key)]);\n\t    \t\treturn;\n\t    \t}\n\t    \t$scope.selectedRows[id] = key;\n\t    }\n\n\t    $scope.removeSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.delete($scope.selectedRows[selected], selected);\n\t    \t}\n\t\t    $scope.getMessages();\n\t    }\n\n\t    $scope.resendSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.resend(selected, $scope.messages[selected].id);\n\t    \t}\n\t    \t$scope.selectedRows = [];\n\t    }\n\n    \tjQuery('body').on('click', '#selectAllRows', function(){\n    \t\tjQuery('input[type=checkbox].selectRow').trigger('click');\n    \t});\n\n        $scope.showGroupMessages = function(id){\n        \t$rootScope.groupMessages = [];\n        \t$http({\n        \t\tmethod: 'get',\n        \t\turl: 'sms/report/group/'+id\n        \t}).then(function(res){\n        \t\t$rootScope.groupMessages = res.data;\n        \t})\n        \t$modal.open({\n                templateUrl: 'views/common/show_group_numbers.html',\n                controller: function($scope, DTOptionsBuilder){\n                \t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t\t\t        .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t\t\t        .withButtons([\n\t\t\t\t            {extend: 'copy'},\n\t\t\t\t            {extend: 'csv'},\n\t\t\t\t            {extend: 'excel', title: 'ExampleFile'},\n\t\t\t\t            \n\n\t\t\t\t            {extend: 'print',\n\t\t\t\t                customize: function (win){\n\t\t\t\t                    $(win.document.body).addClass('white-bg');\n\t\t\t\t                    $(win.document.body).css('font-size', '10px');\n\n\t\t\t\t                    $(win.document.body).find('table')\n\t\t\t\t                        .addClass('compact')\n\t\t\t\t                        .css('font-size', 'inherit');\n\t\t\t\t                }\n\t\t\t\t            }\n\t\t\t\t        ]);\n                }\n            });\n        }\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('sendSingleSMSController', function($rootScope, $scope, $http, $stateParams, charactersFactory){\n\n\t\t$scope.userId = null;\n\t\t$scope.contacts = [];\n\t\t$scope.messageCharactersSingle = 0;\n\t\t$scope.testMessageCharacters = 0;\n\n\n\t\t$scope.sendSingleSMSURL = 'sms/send/to';\n\n\t\t$http({\n\t\t\turl: 'contacts/contact',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.contacts = res.data;\n\t\t\t$scope.contacts.unshift('');\n\t\t});\n\n\t\t$http({\n\t\t\turl: 'sms/schedules',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.schedules = res.data;\n\t\t});\n\n\t\t$scope.calculateCharacters = function(text){\n\t\t\t$scope.messageCharactersSingle = $scope.testMessageCharacters = (typeof text != 'undefined') ? text.length : 0;\n\t\t\t$scope.messagePages = charactersFactory.calculate($rootScope.lineIdNumbers[$rootScope.info.line], $rootScope.info.text);\n\t\t}\n\n\t\tif($stateParams.id){\n\t\t\t$http({\n\t\t\t\turl: 'sms/input/'+$stateParams.id,\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$rootScope.info = res.data;\n\t\t\t\t$scope.calculateCharacters($rootScope.info.text);\n\t\t\t});\n\t\t}\n\n\t});","angular\n\t.module('inspinia')\n\t.controller('trashedSMSController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\n\t\t$scope.selectedRows = [];\n\n\t\t$scope.getMessages = function()\n\t\t{\n\n\t\t\t$http({\n\t\t\t\turl: 'sms/report/trash',\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.messages = res.data;\n\t\t\t\t$scope.selectedRows = [];\n\t\t\t});\n\t\t}\n\n\t\t$scope.getMessages();\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t        .withDOM('<\"html5buttons\"B>lTfgitp')\n\t        .withButtons([\n\t            {extend: 'copy'},\n\t            {extend: 'csv'},\n\t            {extend: 'excel', title: 'ExampleFile'},\n\t            \n\n\t            {extend: 'print',\n\t                customize: function (win){\n\t                    $(win.document.body).addClass('white-bg');\n\t                    $(win.document.body).css('font-size', '10px');\n\n\t                    $(win.document.body).find('table')\n\t                        .addClass('compact')\n\t                        .css('font-size', 'inherit');\n\t                }\n\t            }\n\t        ]);\n\n\n\t    $scope.restore = function(key, id, multi){\n\t    \t$http({\n\t    \t\turl: 'sms/restore/'+id,\n\t    \t\tmethod: 'post'\n\t    \t}).then(function(res){\n\t    \t\tif(typeof multi == 'undefined'){\n\t    \t\t\t$scope.messages.splice(key, 1);\n\t    \t\t}\n\t    \t});\n\t    }\n\n\t    $scope.destroy = function(key, id, multi){\n\t    \t$http({\n\t    \t\turl: 'sms/delete/destroy/'+id,\n\t    \t\tmethod: 'delete'\n\t    \t});\n\t    }\n\n\t    $scope.selectRow = function(key, id){\n\t    \tif($scope.selectedRows.indexOf(key) !== -1){\n\t    \t\tdelete($scope.selectedRows[$scope.selectedRows.indexOf(key)]);\n\t    \t\treturn;\n\t    \t}\n\t    \t$scope.selectedRows[id] = key;\n\t    }\n\n\t    $scope.removeSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.destroy($scope.selectedRows[selected], selected);\n\t    \t}\n\t    \t$scope.getMessages();\n\t    }\n\n\t    $scope.restoreSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.destroy($scope.selectedRows[selected], selected, true);\n\t    \t}\n\t    \tsetTimeout(function(){\n\t    \t\t$scope.selectedRows = [];\n\t\t    \t$http({\n\t\t\t\t\turl: 'sms/report/trash',\n\t\t\t\t\tmethod: 'get'\n\t\t\t\t}).then(function(res){\n\t\t\t\t\t$scope.messages = res.data;\n\t\t\t\t});\n\t    \t}, 500);\n\t    }\n\n        \tjQuery('body').on('click', '#selectAllRows', function(){\n        \t\tjQuery('input[type=checkbox].selectRow').trigger('click');\n        \t});\n\n\t});","angular\n\t.module('inspinia')\n\t.controller('socketController', function($rootScope, $scope){\n\t\tconsole.log('i');\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createSpecialsController', function($rootScope, $scope){\n\t\t\n\t\t$scope.createSpecialsURL = 'specials';\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editSpecialsController', function($rootScope, $scope, $http, $stateParams){\n\t\t\n\t\t$scope.id = $stateParams.id;\n\n\t\t$scope.editSpecialsURL = 'specials/'+$scope.id;\n\n\t\t$http({\n\t\t\turl: 'specials/'+$scope.id+'/edit',\n\t\t\tmethod: 'get',\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('specialsController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\t\t\n\t\t$http({\n\t\t\turl: 'specials',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.specials = res.data;\n\t\t});\n\n\t\t$scope.delete = function(key, index){\n\t\t\t$http({\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: 'specials/'+index\n\t\t\t});\n\t\t\t$scope.specials.splice(key, 1);\n\t\t};\n\n\t\t$scope.disable = function(key, index){\n\t\t\t$http({\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: 'specials/disable/'+index\n\t\t\t});\n\t\t\t$scope.specials[key].status = -1;\n\t\t};\n\n\t\t$scope.enable = function(key, index){\n\t\t\t$http({\n\t\t\t\tmethod: 'put',\n\t\t\t\turl: 'specials/enable/'+index\n\t\t\t});\n\t\t\t$scope.specials[key].status = 0;\n\t\t};\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('aboutUsController', function($rootScope, $scope, $http){\n\t\t\n\t\t$scope.aboutUs = '';\n\n\t\t$http({\n\t\t\turl: 'customization/about-us',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.aboutUs = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('contactUsController', function($rootScope, $scope, $http){\n\t\t\n\t\t$scope.contactUs = '';\n\n\t\t$http({\n\t\t\turl: 'customization/contact-us',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.contactUs = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('supportFaqController', function($rootScope, $scope, $http){\n\t\t\n\t\t$scope.faqs = [];\n\n\t\t$http({\n\t\t\turl: 'faqs',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.faqs = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('supportMarketingCodeController', function($rootScope, $scope, $http){\n\t\t\n\t\t$scope.marketingCode = [];\n\n\t\t$http({\n\t\t\turl: 'customization/marketing_code',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.marketingCode = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('onlineSupportController', function($rootScope, $scope, $http, $stateParams){\n\n\t\t$scope.messages = [];\n\n\t\t$http({\n\t\t\turl: 'support/chat/with/'+$stateParams.id,\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.messages = res.data;\n\t\t});\n\n\t\t$rootScope.$on('notification', function(event, data){\n\t\t\t$scope.$apply(function(){\n\t\t\t\t$scope.messages.push(data.message);\n\t\t\t});\n\t\t});\n\n\t\t$scope.sendMessage = function(){\n\t\t\t$scope.messages.push($scope.message);\n\t\t\t$http({\n\t\t\t\turl: 'support/chat/new-message',\n\t\t\t\tmethod: 'post', \n\t\t\t\tdata: {\n\t\t\t\t\tmessage: $scope.message,\n\t\t\t\t\treceiver: $stateParams.id\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$scope.message = '';\n\n\t\t}\n\t});\t","","angular\n\t.module('inspinia')\n\t.controller('ticketsController', function($rootScope, $scope, $http, DTOptionsBuilder, $stateParams){\n\t\t\n\t\t$http({\n\t\t\turl: 'support/tickets',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.tickets = res.data;\n\t\t});\n\n\t\t$scope.createTicketURL = 'support/tickets';\n\t\t$scope.answerToTicketURL = 'support/tickets/'+$stateParams.id;\n\n\t\tif($stateParams.id){\n\t\t\t$http({\n\t\t\t\turl: 'support/tickets/'+$stateParams.id,\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$scope.ticket = res.data;\n\t\t\t})\n\t\t}\n\n\t\t$scope.close = function(key, index){\n\t\t\t$http({\n\t\t\t\turl: 'support/tickets/cancel/'+index,\n\t\t\t\tmethod: 'delete'\n\t\t\t});\n\t\t\t$scope.tickets['sent'][key].condition = '-';\n\t\t\t$scope.tickets['sent'][key].status = -1;\n\t\t}\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createTransferToEmailController', function($rootScope, $scope, $http){\n\t\t\n\t\t$scope.createTransferToEmailURL = 'transfer-to-email';\n\n\t\t$http({\n\t\t\turl: 'lines',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.lines = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editTransferToEmailController', function($rootScope, $scope, $http, $stateParams){\n\t\t\n\t\t$scope.id = $stateParams.id;\n\n\t\t$scope.editTransferToEmailURL = 'transfer-to-email/'+$scope.id;\n\n\t\t$http({\n\t\t\turl: 'transfer-to-email/'+$scope.id+'/edit',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data.transfer;\n\t\t\t$scope.lines = res.data.lines;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('transferToEmailController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\n\t\t$scope.selectedRows = [];\n\t\t\n\t\t$http({\n\t\t\turl: 'transfer-to-email',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.transfers = res.data;\n\t\t});\n\n\t\t$scope.delete = function(key, index){\n\t\t\t$http({\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: 'transfer-to-email/'+index\n\t\t\t});\n\t\t\t$scope.transfers.splice(key, 1);\n\t\t}\n\n\t\t$scope.selectRow = function(key, id){\n\t    \tif($scope.selectedRows.indexOf(key) !== -1){\n\t    \t\tdelete($scope.selectedRows[$scope.selectedRows.indexOf(key)]);\n\t    \t\treturn;\n\t    \t}\n\t    \t$scope.selectedRows[id] = key;\n\t    }\n\n\t    jQuery('body').on('click', '#selectAllRows', function(){\n    \t\tjQuery('input[type=checkbox].selectRow').trigger('click');\n    \t});\n\n\t    $scope.removeSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.delete($scope.selectedRows[selected], selected, true);\n\t    \t}\n\t    \tsetTimeout(function(){\n\t    \t\t$scope.selectedRows = [];\n\t\t    \t$http({\n\t\t\t\t\turl: 'sms/report',\n\t\t\t\t\tmethod: 'get'\n\t\t\t\t}).then(function(res){\n\t\t\t\t\t$scope.messages = res.data;\n\t\t\t\t});\n\t    \t}, 500);\n\t    }\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('lawyersController', function($scope, $http, DTOptionsBuilder){\n\t\t\n\t\t$http({\n\t\t\turl: 'users/lawyer',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.lawyers = res.data;\n\t\t});\n\n\t\t$scope.delete = function(key, index){\n\t\t\t$http({\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: 'users/lawyer/'+index\n\t\t\t});\n\t\t\t$scope.lawyers.splice(key, 1);\n\t\t};\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('changeUserParentController', function($scope, $http, $rootScope, $stateParams){\n\t\t\n\t\t$scope.changeUserParentURL = 'api/users/change-parent';\n\n\t\t$http({\n\t\t\turl: 'api/users/available-to-parent/'+$stateParams.id,\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.parents = res.data.users;\n\t\t\t$scope.currentUser = res.data.userInfo;\n\t\t});\n\n\t\t$scope.submitForm = function(){\n\t\t\t$rootScope.info.target = $stateParams.id;\n\t\t}\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('userReportController', function($scope, $http, DTOptionsBuilder){\n\t\t\n\t\t$http({\n\t\t\turl: 'users/report',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.logins = res.data;\n\t\t});\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('sendMessageToUserController', function($rootScope, $scope, charactersFactory){\n\t\t\n\t\t$scope.messageCharacters = 0;\n\n\t\t$scope.sendSingleSMSURL = 'sms/send/to';\n\t\t$scope.sendGroupSMSURL = 'sms/send/to/group';\n\n\t\t$scope.calculateCharacters = function(text){\n\t\t\t$scope.messageCharacters = (typeof text != 'undefined') ? text.length : 0;\n\t\t\t$scope.messagePages = charactersFactory.calculate($rootScope.lineIdNumbers[$rootScope.info.line], $rootScope.info.text);\n\t\t}\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('adminSettingController', function($rootScope, $scope, $http){\n\n\t\t$scope.adminSettingsURL = 'admin/update';\n\t\t$scope.changeGatewaySettingURL = 'users/setting/gateway';\n\n\t\t$http({\n\t\t\turl: 'admin/info',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t\t$rootScope.info.gateway = [];\n\t\t\t$http({\n\t\t\t\turl: 'users/setting/gateway',\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$rootScope.info.gateway = res.data.gateway;\n\t\t\t});\n\t\t\tconsole.log($rootScope.info);\n\t\t});\n\n\t\tif($rootScope.user.role == 'agent'){\n\t\t\t$http({\n\t\t\t\turl: 'users/setting/gateway',\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$rootScope.info.gateway = res.data.gateway;\n\t\t\t});\n\t\t}\n\n\t});","angular\n\t.module('inspinia')\n\t.controller('createContactGroupController', function($rootScope, $scope, $http){\n\t\t\n\t\t$scope.createContactGroupURL = 'contacts/groups';\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editContactGroupController', function($rootScope, $scope, $http, $stateParams){\n\t\t\n\t\t$scope.id = $stateParams.id;\n\n\t\t$scope.editContactGroupURL = 'contacts/groups/'+$scope.id;\n\n\t\t$http({\n\t\t\turl: 'contacts/groups/'+$scope.id+'/edit',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createFluentCreditGroupController', function($rootScope, $scope, $stateParams, $http){\n\t\t\n\t\t$scope.createFluentCreditGroupURL = 'fluent-credits/groups';\n\n\t\tif($stateParams.id){\n\t\t\t$scope.editFluentCreditGroupURL = 'fluent-credits/groups/'+$stateParams.id;\n\n\t\t\t$http({\n\t\t\t\turl: 'fluent-credits/groups/'+$stateParams.id+'/edit',\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$rootScope.info = res.data;\n\t\t\t});\n\t\t}\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('fluentCreditHomeController', function($scope, $http, DTOptionsBuilder){\n\t\t\n\t\t$http({\n\t\t\turl: 'fluent-credits/groups',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.fluentCreditGroups = res.data;\n\t\t});\n\n\t\t$scope.delete = function(key, id){\n\t\t\t$http({\n\t\t\t\turl: 'fluent-credits/groups/'+id,\n\t\t\t\tmethod: 'delete'\n\t\t\t});\n\t\t\t$scope.fluentCreditGroups.splice(key, 1);\n\t\t}\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createPreTextGroupController', function($rootScope, $scope, $http){\n\t\t\n\t\t$scope.createPreTextGroupURL = 'pre-texts/group';\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editPreTextGroupController', function($rootScope, $scope, $http, $stateParams){\n\t\t\n\t\t$scope.id = $stateParams.group_id;\n\n\t\t$scope.editPreTextGroupURL = 'pre-texts/group/'+$scope.id;\n\n\t\t$http({\n\t\t\turl: 'pre-texts/group/'+$scope.id+'/edit',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('preTextGroupController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\t\t\n\t\t$scope.selectedRows = [];\n\t\t\t\n\t\t$http({\n\t\t\turl: 'pre-texts/group',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.groups = res.data;\n\t\t});\n\n\t\t$scope.selectRow = function(key, id){\n\t    \tif($scope.selectedRows.indexOf(key) !== -1){\n\t    \t\tdelete($scope.selectedRows[$scope.selectedRows.indexOf(key)]);\n\t    \t\treturn;\n\t    \t}\n\t    \t$scope.selectedRows[id] = key;\n\t    }\n\n\t    $scope.delete = function(id)\n\t    {\n\n\t    \t$http({\n\t    \t\turl: 'pre-texts/group/'+id,\n\t    \t\tmethod: 'delete'\n\t    \t}).then(function(){\n\t    \t\t$http({\n\t\t\t\t\turl: 'pre-texts/group',\n\t\t\t\t\tmethod: 'get'\n\t\t\t\t}).then(function(res){\n\t\t\t\t\t$scope.groups = res.data;\n\t\t\t\t});\n\t    \t});\n\n\t    }\n\n\t    $scope.removeSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.delete($scope.selectedRows[selected], selected, true);\n\t    \t}\n\t    \tsetTimeout(function(){\n\t    \t\t$scope.selectedRows = [];\n\t\t    \t$http({\n\t\t\t\t\turl: 'pre-texts/group',\n\t\t\t\t\tmethod: 'get'\n\t\t\t\t}).then(function(res){\n\t\t\t\t\t$scope.groups = res.data;\n\t\t\t\t});\n\t    \t}, 500);\n\t    }\n\n\t    jQuery('body').on('click', '#selectAllRows', function(){\n    \t\tjQuery('input[type=checkbox].selectRow').trigger('click');\n    \t});\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createDefaultMessagesController', function($rootScope, $scope){\n\t\t\n\t\t$scope.createDefaultMessagesURL = 'sms/default-messages';\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('editDefaultMessagesController', function($rootScope, $scope, $http, $stateParams){\n\t\t\n\t\t$scope.editDefaultMessagesURL = 'sms/default-messages/'+$stateParams.id;\n\n\t\t$http({\n\t\t\turl: 'sms/default-messages/'+$stateParams.id+'/edit',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$rootScope.info = res.data;\n\t\t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('defaultMessagesController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\t\t\n\t\t$http({\n\t\t\turl: 'sms/default-messages',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.defaultMessages = res.data;\n\t\t});\n\n\t\t$scope.delete = function(key, index){\n\t\t\t$scope.defaultMessages.splice(key, 1);\n\t\t\t$http({\n\t\t\t\turl: 'sms/default-messages/'+index,\n\t\t\t\tmethod: 'delete'\n\t\t\t});\n\t\t}\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('createSchedulesController', function($rootScope, $scope, $http, $stateParams){\n\t\t\n\t\t$scope.creaetSchedulesURL = 'sms/schedules';\n\n\t\t$http({\n\t\t\turl: 'sms/schedules/create',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.scheduleInfos = res.data;\n\t\t});\n\n\t\t$scope.monthDays = function(){\n\t\t\tvar array = [];\n\t\t\tfor(var i=1; i<=31; i++){\n\t\t\t\tarray.push(i);\n\t\t\t}\n\t\t\treturn array;\n\t\t}\n\n\t\tif($stateParams.id){\n\t\t\t$scope.creaetSchedulesURL = 'sms/schedules/'+$stateParams.id;\n\t\t\t$http({\n\t\t\t\turl: 'sms/schedules/'+$stateParams.id+'/edit',\n\t\t\t\tmethod: 'get'\n\t\t\t}).then(function(res){\n\t\t\t\t$rootScope.info = res.data;\n\t\t\t});\n\t\t}\n\n\t});\t","","angular\n\t.module('inspinia')\n\t.controller('schedulesController', function($rootScope, $scope, $http, DTOptionsBuilder){\n\n\t\t$scope.selectedRows = [];\n\t\t\n\t\t$http({\n\t\t\turl: 'sms/schedules',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.schedules = res.data;\n\t\t});\n\n\t\t$scope.disable = function(key, index){\n\t\t\t$scope.schedules[key].status = -1;\n\t\t\t$http({\n\t\t\t\turl: 'sms/schedules/disable',\n\t\t\t\tmethod: 'post',\n\t\t\t\tdata: {\n\t\t\t\t\tid: index\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\t$scope.enable = function(key, index){\n\t\t\t$scope.schedules[key].status = 0;\n\t\t\t$http({\n\t\t\t\turl: 'sms/schedules/enable',\n\t\t\t\tmethod: 'post',\n\t\t\t\tdata: {\n\t\t\t\t\tid: index\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\t$scope.delete = function(key, index){\n\t\t\t$scope.schedules.splice(key, 1);\n\t\t\t$http({\n\t\t\t\turl: 'sms/schedules/'+index,\n\t\t\t\tmethod: 'delete',\n\t\t\t});\n\t\t}\n\n\t\t$scope.dtOptions = DTOptionsBuilder.newOptions()\n\t\t    .withDOM('<\"html5buttons\"B>lTfgitp')\n\t\t    .withButtons([\n\t\t        {extend: 'copy'},\n\t\t        {extend: 'csv'},\n\t\t        {extend: 'excel', title: 'ExampleFile'},\n\t\t        \n\t\t\n\t\t        {extend: 'print',\n\t\t            customize: function (win){\n\t\t                $(win.document.body).addClass('white-bg');\n\t\t                $(win.document.body).css('font-size', '10px');\n\t\t\n\t\t                $(win.document.body).find('table')\n\t\t                    .addClass('compact')\n\t\t                    .css('font-size', 'inherit');\n\t\t            }\n\t\t        }\n\t\t    ]);\n\n\t\t$scope.selectRow = function(key, id){\n\t    \tif($scope.selectedRows.indexOf(key) !== -1){\n\t    \t\tdelete($scope.selectedRows[$scope.selectedRows.indexOf(key)]);\n\t    \t\treturn;\n\t    \t}\n\t    \t$scope.selectedRows[id] = key;\n\t    }\n\n\t    $scope.removeSelected = function(){\n\t    \tfor(selected in $scope.selectedRows){\n\t    \t\t$scope.delete($scope.selectedRows[selected], selected, true);\n\t    \t}\n\t    \tsetTimeout(function(){\n\t    \t\t$scope.selectedRows = [];\n\t\t    \t$http({\n\t\t\t\t\turl: 'sms/schedules',\n\t\t\t\t\tmethod: 'get'\n\t\t\t\t}).then(function(res){\n\t\t\t\t\t$scope.schedules = res.data;\n\t\t\t\t});\n\t    \t}, 500);\n\t    }\n\n\n\t\t    jQuery('body').on('click', '#selectAllRows', function(){\n        \t\tjQuery('input[type=checkbox].selectRow').trigger('click');\n        \t});\n\n\t});\t","angular\n\t.module('inspinia')\n\t.controller('onlineSupportHomeController', ['$rootScope', '$scope', '$state', '$http', function($rootScope, $scope, $state, $http){\n\t\t$rootScope.$watch('user', function(val){\n\t\t\tif(typeof val == 'undefined') return;\n\t\t\tif($rootScope.user.role == 'user') {\n\t\t\t\t$state.go('app.support.online.chat', {id: $rootScope.user.agent_id});\n\t\t\t}\n\t\t});\n\n\t\t$http({\n\t\t\turl: 'support/chat/chats',\n\t\t\tmethod: 'get'\n\t\t}).then(function(res){\n\t\t\t$scope.chats = res.data;\n\t\t})\n\t}]);\t"],"sourceRoot":"/source/"}